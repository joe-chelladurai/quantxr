---
title: "Untitled"
editor: visual
---



```{r}
library(tidyverse)
```

70.05	
69.325	

```{r}
# Initialize a global seed
set.seed(9)


generate_numbers <- function(n, ratio, seed) {
  # Generate n numbers from a beta distribution with alpha > beta
  set.seed(seed)
  
  alpha <- 1
  beta <- 1 / ratio  # take the reciprocal to get beta

  skewed <- rbeta(n, alpha, beta)
  
  # Scale numbers to be between 1 and 5
  skewed_scaled <- 1 + 4 * skewed
  return(round(skewed_scaled))
}

q_01 <- generate_numbers(100, 6/2, sample(1:10))
q_02 <- generate_numbers(100, 1/4, sample(11:20))
q_03 <- generate_numbers(100, 4/2, sample(21:30))
q_04 <- generate_numbers(100, 1/4, sample(31:40))
q_05 <- generate_numbers(100, 4/2, sample(41:50))
q_06 <- generate_numbers(100, 6/4, sample(51:60))
q_07 <- generate_numbers(100, 2/2, sample(61:70))
q_08 <- generate_numbers(100, 2/4, sample(71:80))
q_09 <- generate_numbers(100, 1/2, sample(81:90))
q_10 <- generate_numbers(100, 1/4, sample(91:100))

df <- data.frame(q_01, q_02, q_03, q_04, q_05, q_06, q_07, q_08, q_09, q_10)

df |> gather() |> 
  ggplot(aes(x = value)) + geom_density() + facet_wrap( ~key)


df |> 
  mutate(total_odd = rowSums(select(df, ends_with(c("1", "3", "5", "7", "9"))), na.rm = TRUE)) |> 
  mutate(total_even = rowSums(select(df, ends_with(c("0", "2", "4", "6", "8"))), na.rm = TRUE)) |> 
  mutate(total_odd = total_odd - 5) |> 
  mutate(total_even = 25 - total_even) |> 
  mutate(total = total_odd + total_even) |> 
  mutate(total = total * 2.5) |> summarise(mean = mean(total))
```

```{r}
rnorm(1, mean = 2, sd = 1)
```




Step 1: Convert the scale into number for each of the 10 questions

Strongly Disagree: 1 point
Disagree: 2 points
Neutral: 3 points
Agree: 4 points
Strongly Agree: 5 points
Step 2: Calculate

X = Sum of the points for all odd-numbered questions – 5
Y = 25 – Sum of the points for all even-numbered questions
SUS Score = (X + Y) x 2.5
The rationale behind the calculation is very intuitive. The total score is 100 and each of the questions has a weight of 10 points.

As odd-numbered questions are all in a positive tone, if the response is strongly agree, you will want to give them the maximum point which is 10 for each question. If the response is strongly disagree, you will want to give them the minimum point which is 0. By subtracting 1 from each of the odd-numbered questions, you ensure that minimum is 0. After which, by multiplying by 2.5, you ensure that the maximum is 10 for each of the questions.

Vice versa, for the even-numbered questions in a negative tone,  if the response is strongly agree, you will want to give them the minimum point which is 0 for each question. If the response is strongly disagree, you will want to give them the minimum point which is 0. As such, by subtracting the points of each question from 5, you ensure that minimum is 0. After which, by multiplying by 2.5, you ensure that the maximum is 10 for each of the questions.

 

 

Interpreting System Usability Scale (SUS) Score
SUS score will be able to tell you your usability performance in the aspects of effectiveness, efficiency, and overall ease of use. Although each responses yield a score on a scale of 0 – 100, do not mistake it as a percentage or percentile.

The average SUS score is 68. This simply means that a score of 68 will just put you at 50th percentile. Below is the general guideline on the interpretation of SUS score:

SUS Score	Grade	Adjective Rating
> 80.3	A	Excellent
68 – 80.3	B	Good
68	C	Okay
51 – 68	D	Poor
< 51	F	Awful
 