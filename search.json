[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This is a place where I share Quantitative UX Resources. I am looking for a job. Please hire me.\nJoe Chelladurai"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#hello-there",
    "href": "book/chapter-1/demo/index.html#hello-there",
    "title": "Quarto Presentations",
    "section": "Hello, There",
    "text": "Hello, There\nThis presentation will show you examples of what you can do with Quarto and Reveal.js, including:\n\nPresenting code and LaTeX equations\nIncluding computations in slide output\nImage, video, and iframe backgrounds\nFancy transitions and animations\nPrinting to PDF\n\n…and much more"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#pretty-code",
    "href": "book/chapter-1/demo/index.html#pretty-code",
    "title": "Quarto Presentations",
    "section": "Pretty Code",
    "text": "Pretty Code\n\nOver 20 syntax highlighting themes available\nDefault theme optimized for accessibility\n\n# Define a server for the Shiny app\nfunction(input, output) {\n  \n  # Fill in the spot we created for a plot\n  output$phonePlot &lt;- renderPlot({\n    # Render a barplot\n  })\n}\n\nLearn more: Syntax Highlighting"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#code-animations",
    "href": "book/chapter-1/demo/index.html#code-animations",
    "title": "Quarto Presentations",
    "section": "Code Animations",
    "text": "Code Animations\n\nOver 20 syntax highlighting themes available\nDefault theme optimized for accessibility\n\n# Define a server for the Shiny app\nfunction(input, output) {\n  \n  # Fill in the spot we created for a plot\n  output$phonePlot &lt;- renderPlot({\n    # Render a barplot\n    barplot(WorldPhones[,input$region]*1000, \n            main=input$region,\n            ylab=\"Number of Telephones\",\n            xlab=\"Year\")\n  })\n}\n\nLearn more: Code Animations"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#line-highlighting",
    "href": "book/chapter-1/demo/index.html#line-highlighting",
    "title": "Quarto Presentations",
    "section": "Line Highlighting",
    "text": "Line Highlighting\n\nHighlight specific lines for emphasis\nIncrementally highlight additional lines\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\nLearn more: Line Highlighting"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#executable-code",
    "href": "book/chapter-1/demo/index.html#executable-code",
    "title": "Quarto Presentations",
    "section": "Executable Code",
    "text": "Executable Code\n\nlibrary(ggplot2)\nggplot(mtcars, aes(hp, mpg, color = am)) +\n  geom_point() +\n  geom_smooth(formula = y ~ x, method = \"loess\")\n\n\n\nLearn more: Executable Code"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#latex-equations",
    "href": "book/chapter-1/demo/index.html#latex-equations",
    "title": "Quarto Presentations",
    "section": "LaTeX Equations",
    "text": "LaTeX Equations\nMathJax rendering of equations to HTML\n\n\n\\begin{gather*}\na_1=b_1+c_1\\\\\na_2=b_2+c_2-d_2+e_2\n\\end{gather*}\n\n\\begin{align}\na_{11}& =b_{11}&\n  a_{12}& =b_{12}\\\\\na_{21}& =b_{21}&\n  a_{22}& =b_{22}+c_{22}\n\\end{align}\n\n\\[\\begin{gather*}\na_1=b_1+c_1\\\\\na_2=b_2+c_2-d_2+e_2\n\\end{gather*}\\]\n\\[\\begin{align}\na_{11}& =b_{11}&\n  a_{12}& =b_{12}\\\\\na_{21}& =b_{21}&\n  a_{22}& =b_{22}+c_{22}\n\\end{align}\\]\n\n\n\nLearn more: LaTeX Equations"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#column-layout",
    "href": "book/chapter-1/demo/index.html#column-layout",
    "title": "Quarto Presentations",
    "section": "Column Layout",
    "text": "Column Layout\nArrange content into columns of varying widths:\n\n\nMotor Trend Car Road Tests\nThe data was extracted from the 1974 Motor Trend US magazine, and comprises fuel consumption and 10 aspects of automobile design and performance for 32 automobiles.\n\n\n\n\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\nwt\n\n\n\n\nMazda RX4\n21.0\n6\n160\n110\n2.620\n\n\nMazda RX4 Wag\n21.0\n6\n160\n110\n2.875\n\n\nDatsun 710\n22.8\n4\n108\n93\n2.320\n\n\nHornet 4 Drive\n21.4\n6\n258\n110\n3.215\n\n\nHornet Sportabout\n18.7\n8\n360\n175\n3.440\n\n\nValiant\n18.1\n6\n225\n105\n3.460\n\n\n\n\n\n\n\n\nLearn more: Multiple Columns"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#incremental-lists",
    "href": "book/chapter-1/demo/index.html#incremental-lists",
    "title": "Quarto Presentations",
    "section": "Incremental Lists",
    "text": "Incremental Lists\nLists can optionally be displayed incrementally:\n\n\nFirst item\nSecond item\nThird item\n\n\n\n Insert pauses to make other types of content display incrementally.\n\nLearn more: Incremental Lists"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#fragments",
    "href": "book/chapter-1/demo/index.html#fragments",
    "title": "Quarto Presentations",
    "section": "Fragments",
    "text": "Fragments\nIncremental text display and animation with fragments:\n\n\nFade in\n\n\nSlide up while fading in\n\n\nSlide left while fading in\n\n\nFade in then semi out\n\n\n\nStrike\n\n\nHighlight red\n\n\nLearn more: Fragments"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#slide-backgrounds",
    "href": "book/chapter-1/demo/index.html#slide-backgrounds",
    "title": "Quarto Presentations",
    "section": "Slide Backgrounds",
    "text": "Slide Backgrounds\nSet the background attribute on a slide to change the background color (all CSS color formats are supported).\nDifferent background transitions are available via the background-transition option.\n\nLearn more: Slide Backgrounds"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#media-backgrounds",
    "href": "book/chapter-1/demo/index.html#media-backgrounds",
    "title": "Quarto Presentations",
    "section": "Media Backgrounds",
    "text": "Media Backgrounds\nYou can also use the following as a slide background:\n\nAn image: background-image\nA video: background-video\nAn iframe: background-iframe\n\n\nLearn more: Media Backgrounds"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#absolute-position",
    "href": "book/chapter-1/demo/index.html#absolute-position",
    "title": "Quarto Presentations",
    "section": "Absolute Position",
    "text": "Absolute Position\nPosition images or other elements at precise locations\n\n\n\n\nLearn more: Absolute Position"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#auto-animate",
    "href": "book/chapter-1/demo/index.html#auto-animate",
    "title": "Quarto Presentations",
    "section": "Auto-Animate",
    "text": "Auto-Animate\nAutomatically animate matching elements across slides with Auto-Animate.\n\n\n\n\n\n\n\n\n\n\n\n\nLearn more: Auto-Animate"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#auto-animate-1",
    "href": "book/chapter-1/demo/index.html#auto-animate-1",
    "title": "Quarto Presentations",
    "section": "Auto-Animate",
    "text": "Auto-Animate\nAutomatically animate matching elements across slides with Auto-Animate.\n\n\n\n\n\n\n\n\n\n\n\n\nLearn more: Auto-Animate"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#slide-transitions",
    "href": "book/chapter-1/demo/index.html#slide-transitions",
    "title": "Quarto Presentations",
    "section": "Slide Transitions",
    "text": "Slide Transitions\nThe next few slides will transition using the slide transition\n\n\n\n\n\n\n\nTransition\nDescription\n\n\n\n\nnone\nNo transition (default, switch instantly)\n\n\nfade\nCross fade\n\n\nslide\nSlide horizontally\n\n\nconvex\nSlide at a convex angle\n\n\nconcave\nSlide at a concave angle\n\n\nzoom\nScale the incoming slide so it grows in from the center of the screen.\n\n\n\n\nLearn more: Slide Transitions"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#tabsets",
    "href": "book/chapter-1/demo/index.html#tabsets",
    "title": "Quarto Presentations",
    "section": "Tabsets",
    "text": "Tabsets\n\nPlotData\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n\nMazda RX4\n21.0\n6\n160.0\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n\n\nMazda RX4 Wag\n21.0\n6\n160.0\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n\n\nDatsun 710\n22.8\n4\n108.0\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n\n\nHornet 4 Drive\n21.4\n6\n258.0\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n\n\nHornet Sportabout\n18.7\n8\n360.0\n175\n3.15\n3.440\n17.02\n0\n0\n3\n2\n\n\nValiant\n18.1\n6\n225.0\n105\n2.76\n3.460\n20.22\n1\n0\n3\n1\n\n\nDuster 360\n14.3\n8\n360.0\n245\n3.21\n3.570\n15.84\n0\n0\n3\n4\n\n\nMerc 240D\n24.4\n4\n146.7\n62\n3.69\n3.190\n20.00\n1\n0\n4\n2\n\n\nMerc 230\n22.8\n4\n140.8\n95\n3.92\n3.150\n22.90\n1\n0\n4\n2\n\n\nMerc 280\n19.2\n6\n167.6\n123\n3.92\n3.440\n18.30\n1\n0\n4\n4\n\n\nMerc 280C\n17.8\n6\n167.6\n123\n3.92\n3.440\n18.90\n1\n0\n4\n4\n\n\nMerc 450SE\n16.4\n8\n275.8\n180\n3.07\n4.070\n17.40\n0\n0\n3\n3\n\n\nMerc 450SL\n17.3\n8\n275.8\n180\n3.07\n3.730\n17.60\n0\n0\n3\n3\n\n\nMerc 450SLC\n15.2\n8\n275.8\n180\n3.07\n3.780\n18.00\n0\n0\n3\n3\n\n\nCadillac Fleetwood\n10.4\n8\n472.0\n205\n2.93\n5.250\n17.98\n0\n0\n3\n4\n\n\nLincoln Continental\n10.4\n8\n460.0\n215\n3.00\n5.424\n17.82\n0\n0\n3\n4\n\n\nChrysler Imperial\n14.7\n8\n440.0\n230\n3.23\n5.345\n17.42\n0\n0\n3\n4\n\n\nFiat 128\n32.4\n4\n78.7\n66\n4.08\n2.200\n19.47\n1\n1\n4\n1\n\n\nHonda Civic\n30.4\n4\n75.7\n52\n4.93\n1.615\n18.52\n1\n1\n4\n2\n\n\nToyota Corolla\n33.9\n4\n71.1\n65\n4.22\n1.835\n19.90\n1\n1\n4\n1\n\n\nToyota Corona\n21.5\n4\n120.1\n97\n3.70\n2.465\n20.01\n1\n0\n3\n1\n\n\nDodge Challenger\n15.5\n8\n318.0\n150\n2.76\n3.520\n16.87\n0\n0\n3\n2\n\n\nAMC Javelin\n15.2\n8\n304.0\n150\n3.15\n3.435\n17.30\n0\n0\n3\n2\n\n\nCamaro Z28\n13.3\n8\n350.0\n245\n3.73\n3.840\n15.41\n0\n0\n3\n4\n\n\nPontiac Firebird\n19.2\n8\n400.0\n175\n3.08\n3.845\n17.05\n0\n0\n3\n2\n\n\nFiat X1-9\n27.3\n4\n79.0\n66\n4.08\n1.935\n18.90\n1\n1\n4\n1\n\n\nPorsche 914-2\n26.0\n4\n120.3\n91\n4.43\n2.140\n16.70\n0\n1\n5\n2\n\n\nLotus Europa\n30.4\n4\n95.1\n113\n3.77\n1.513\n16.90\n1\n1\n5\n2\n\n\nFord Pantera L\n15.8\n8\n351.0\n264\n4.22\n3.170\n14.50\n0\n1\n5\n4\n\n\nFerrari Dino\n19.7\n6\n145.0\n175\n3.62\n2.770\n15.50\n0\n1\n5\n6\n\n\nMaserati Bora\n15.0\n8\n301.0\n335\n3.54\n3.570\n14.60\n0\n1\n5\n8\n\n\nVolvo 142E\n21.4\n4\n121.0\n109\n4.11\n2.780\n18.60\n1\n1\n4\n2\n\n\n\n\n\n\n\n\n\nLearn more: Tabsets"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#interactive-slides",
    "href": "book/chapter-1/demo/index.html#interactive-slides",
    "title": "Quarto Presentations",
    "section": "Interactive Slides",
    "text": "Interactive Slides\nInclude Jupyter widgets and htmlwidgets in your presentations\n\n\n\n\n\n\n\nLearn more: Jupyter widgets, htmlwidgets"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#interactive-slides-1",
    "href": "book/chapter-1/demo/index.html#interactive-slides-1",
    "title": "Quarto Presentations",
    "section": "Interactive Slides",
    "text": "Interactive Slides\nTurn presentations into applications with Observable and Shiny. Use component layout to position inputs and outputs.\n\n\nviewof talentWeight = Inputs.range([-2, 2], { value: 0.7, step: 0.01, label: \"talent weight\" })\nviewof looksWeight = Inputs.range([-2, 2], { value: 0.7, step: 0.01, label: \"looks weight\" })\nviewof minimum = Inputs.range([-2, 2], { value: 1, step: 0.01, label: \"min fame\" })\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { plotActors } from './actors.js';\nplotActors(actors, talentWeight, looksWeight, minimum)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLearn more: Observable, Shiny, Component Layout"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#preview-links",
    "href": "book/chapter-1/demo/index.html#preview-links",
    "title": "Quarto Presentations",
    "section": "Preview Links",
    "text": "Preview Links\nNavigate to hyperlinks without disrupting the flow of your presentation.\nUse the preview-links option to open links in an iframe on top of your slides. Try clicking the link below for a demonstration:\n\nMatplotlib: Visualization with Python\n\n\nLearn more: Preview Links"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#themes",
    "href": "book/chapter-1/demo/index.html#themes",
    "title": "Quarto Presentations",
    "section": "Themes",
    "text": "Themes\n10 Built-in Themes (or create your own)\n\n\n\n\n\n\n\n\n\n\n\nLearn more: Themes"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#easy-navigation",
    "href": "book/chapter-1/demo/index.html#easy-navigation",
    "title": "Quarto Presentations",
    "section": "Easy Navigation",
    "text": "Easy Navigation\n\nQuickly jump to other parts of your presentation\n\n\n\n\n\n\n\nToggle the slide menu with the menu button (bottom left of slide) to go to other slides and access presentation tools.\n\n\n\nYou can also press m to toggle the menu open and closed.\n\nLearn more: Navigation"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#chalkboard",
    "href": "book/chapter-1/demo/index.html#chalkboard",
    "title": "Quarto Presentations",
    "section": "Chalkboard",
    "text": "Chalkboard\n\nFree form drawing and slide annotations\n\n\n\n\n\n\n\nUse the chalkboard button at the bottom left of the slide to toggle the chalkboard.\n\n\n\n\n\n\n\n\n\nUse the notes canvas button at the bottom left of the slide to toggle drawing on top of the current slide.\n\n\n\nYou can also press b to toggle the chalkboard or c to toggle the notes canvas.\n\nLearn more: Chalkboard"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#point-of-view",
    "href": "book/chapter-1/demo/index.html#point-of-view",
    "title": "Quarto Presentations",
    "section": "Point of View",
    "text": "Point of View\nPress o to toggle overview mode:\n\nHold down the Alt key (or Ctrl in Linux) and click on any element to zoom towards it—try it now on this slide.\n\nLearn more: Overview Mode, Slide Zoom"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#speaker-view",
    "href": "book/chapter-1/demo/index.html#speaker-view",
    "title": "Quarto Presentations",
    "section": "Speaker View",
    "text": "Speaker View\nPress s (or use the presentation menu) to open speaker view\n\n\nLearn more: Speaker View"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#authoring-tools",
    "href": "book/chapter-1/demo/index.html#authoring-tools",
    "title": "Quarto Presentations",
    "section": "Authoring Tools",
    "text": "Authoring Tools\nLive side-by-side preview for any notebook or text editor including Jupyter and VS Code\n\n\n\n\n\n\n\n\nLearn more: Jupyter, VS Code, Text Editors"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#authoring-tools-1",
    "href": "book/chapter-1/demo/index.html#authoring-tools-1",
    "title": "Quarto Presentations",
    "section": "Authoring Tools",
    "text": "Authoring Tools\nRStudio includes an integrated presentation preview pane\n\n\nLearn more: RStudio"
  },
  {
    "objectID": "book/chapter-1/demo/index.html#and-more",
    "href": "book/chapter-1/demo/index.html#and-more",
    "title": "Quarto Presentations",
    "section": "And More…",
    "text": "And More…\n\nTouch optimized (presentations look great on mobile, swipe to navigate slides)\nFooter & Logo (optionally specify custom footer per-slide)\nAuto-Slide (step through slides automatically, without any user input)\nMultiplex (allows your audience to follow the slides of the presentation you are controlling on their own phone, tablet or laptop).\n\n\nLearn more: Quarto Presentations\n\n\n\nhttps://quarto.org"
  },
  {
    "objectID": "book/chapter-1/demo/mini/absolute.html#absolute",
    "href": "book/chapter-1/demo/mini/absolute.html#absolute",
    "title": "Quantitative Experience Research",
    "section": "Absolute",
    "text": "Absolute"
  },
  {
    "objectID": "book/chapter-1/demo/mini/auto-animate-code.html#section",
    "href": "book/chapter-1/demo/mini/auto-animate-code.html#section",
    "title": "Quantitative Experience Research",
    "section": "",
    "text": "# Fill in the spot we created for a plot\noutput$phonePlot &lt;- renderPlot({\n  # Render a barplot\n})"
  },
  {
    "objectID": "book/chapter-1/demo/mini/auto-animate-code.html#section-1",
    "href": "book/chapter-1/demo/mini/auto-animate-code.html#section-1",
    "title": "Quantitative Experience Research",
    "section": "",
    "text": "# Fill in the spot we created for a plot\noutput$phonePlot &lt;- renderPlot({\n  # Render a barplot\n  barplot(WorldPhones[,input$region]*1000, \n          main=input$region,\n          ylab=\"Number of Telephones\",\n          xlab=\"Year\")\n})"
  },
  {
    "objectID": "book/chapter-1/demo/mini/auto-animate-movement.html#section",
    "href": "book/chapter-1/demo/mini/auto-animate-movement.html#section",
    "title": "Quantitative Experience Research",
    "section": "",
    "text": "Animation"
  },
  {
    "objectID": "book/chapter-1/demo/mini/auto-animate-movement.html#section-1",
    "href": "book/chapter-1/demo/mini/auto-animate-movement.html#section-1",
    "title": "Quantitative Experience Research",
    "section": "",
    "text": "Implicit\nAnimation"
  },
  {
    "objectID": "book/chapter-1/demo/mini/auto-animate-stack.html#element-matching-with-data-id",
    "href": "book/chapter-1/demo/mini/auto-animate-stack.html#element-matching-with-data-id",
    "title": "Quantitative Experience Research",
    "section": "Element Matching with data-id",
    "text": "Element Matching with data-id"
  },
  {
    "objectID": "book/chapter-1/demo/mini/auto-animate-stack.html#element-matching-with-data-id-1",
    "href": "book/chapter-1/demo/mini/auto-animate-stack.html#element-matching-with-data-id-1",
    "title": "Quantitative Experience Research",
    "section": "Element Matching with data-id",
    "text": "Element Matching with data-id"
  },
  {
    "objectID": "book/chapter-1/demo/mini/auto-animate.html#section",
    "href": "book/chapter-1/demo/mini/auto-animate.html#section",
    "title": "Quantitative Experience Research",
    "section": "",
    "text": "Animating content"
  },
  {
    "objectID": "book/chapter-1/demo/mini/auto-animate.html#section-1",
    "href": "book/chapter-1/demo/mini/auto-animate.html#section-1",
    "title": "Quantitative Experience Research",
    "section": "",
    "text": "Animating content"
  },
  {
    "objectID": "book/chapter-1/demo/mini/fragments.html#fragments",
    "href": "book/chapter-1/demo/mini/fragments.html#fragments",
    "title": "Quantitative Experience Research",
    "section": "Fragments",
    "text": "Fragments\nClick the arrow to advance through the fragments:\n\n\nFade in\n\n\nFade out\n\n\nHighlight red\n\n\nFade in, then out\n\n\nSlide up while fading in"
  },
  {
    "objectID": "book/chapter-1/demo/mini/stack.html#stack",
    "href": "book/chapter-1/demo/mini/stack.html#stack",
    "title": "Quantitative Experience Research",
    "section": "Stack",
    "text": "Stack\nClick the arrow to advance to the next image in the stack."
  },
  {
    "objectID": "book/chapter-2/index.html",
    "href": "book/chapter-2/index.html",
    "title": "Research Automation",
    "section": "",
    "text": "In this section, I will discuss how we can automate data collection, cleaning, processing, graphing, and reporting.\n\n\n\n\n\n\nRequired Tools\n\n\n\n\nGoogle Forms\nGoogle Sheets\nGoogle Service Account\nGitHub Actions\nR\n\n\n\n\n\n\nGo to forms.google.com and create a form.\n\n\n\n\nGoogle Form\n\n\n\nAdd your questions.\n\n\n\n\nGoogle Form with Example Survey\n\n\n3.Connect to Google Sheets\n\n\n\nConnect to Google Sheets\n\n\nClick on “Link to Sheets” and specify a destination. For this survey, I am creating a new spreadsheet.\n\n\n\nConnect\n\n\n\nWhen you click “Create” you will be taken to the Google Sheet automatically. The responses will be populated when people take the survey.\n\n\n\n\nGoogle Form Responses in a Google Sheet\n\n\n\nNow you are ready to share the survey.\n\n\n\n\nShare Google Form Survey"
  },
  {
    "objectID": "book/chapter-2/index.html#creating-a-survey-in-google-forms",
    "href": "book/chapter-2/index.html#creating-a-survey-in-google-forms",
    "title": "Research Automation",
    "section": "",
    "text": "Go to forms.google.com and create a form.\n\n\n\n\nGoogle Form\n\n\n\nAdd your questions.\n\n\n\n\nGoogle Form with Example Survey\n\n\n3.Connect to Google Sheets\n\n\n\nConnect to Google Sheets\n\n\nClick on “Link to Sheets” and specify a destination. For this survey, I am creating a new spreadsheet.\n\n\n\nConnect\n\n\n\nWhen you click “Create” you will be taken to the Google Sheet automatically. The responses will be populated when people take the survey.\n\n\n\n\nGoogle Form Responses in a Google Sheet\n\n\n\nNow you are ready to share the survey.\n\n\n\n\nShare Google Form Survey"
  },
  {
    "objectID": "garden/change-over-time/index.html",
    "href": "garden/change-over-time/index.html",
    "title": "Quantitative Experience Research",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.1     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nset.seed(42)\ndata &lt;- tibble(\n  date = seq(as.Date('2022-01-01'), as.Date('2022-12-31'), by = 'day'),\n  count = sample(1:10, 365, replace = TRUE)\n)\n\n\n# Function to calculate week of the year\nweek_of_year &lt;- function(date) {\n  yday &lt;- lubridate::yday(date)\n  wday &lt;- lubridate::wday(date)\n  return((yday - wday + 10) %/% 7)\n}\n\n# Applying the function to data\ndata &lt;- data %&gt;%\n  mutate(\n    year = format(date, \"%Y\"),\n    month = format(date, \"%m\"),\n    week = week_of_year(date),\n    wday = wday(date, label = TRUE)\n  )\n\n\nggplot(data, aes(x = week, y = wday, fill = count)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradientn(colors = c(\"white\", \"darkgreen\")) +\n  facet_grid(year~month, scales = \"free\", space = \"free\") +\n  coord_flip() +\n  theme_minimal() +\n  theme(axis.text = element_blank(),\n        axis.title = element_blank(),\n        panel.grid = element_blank(),\n        strip.text = element_text(size = 8)) +\n  labs(fill = \"Activity\")\n\n\n\n\n\n# Create a function to calculate the week number from a date for the whole year.\ncalc_week &lt;- function(date) {\n  as.numeric(format(date, \"%U\")) + \n    ifelse(format(date, \"%w\") == 0, 1, 0)\n}\n\ndata &lt;- data %&gt;%\n  mutate(\n    wday = factor(wday(date, label = TRUE), levels = rev(levels(wday(date, label = TRUE)))),\n    week = calc_week(date),\n    year = year(date)\n  )\n\n# Use ggplot to create the calendar plot\nggplot(data, aes(x = week, y = wday, fill = count)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradientn(colors = c(\"white\", \"darkgreen\")) +\n  theme_minimal() +\n  theme(axis.text = element_blank(),\n        axis.title = element_blank(),\n        panel.grid = element_blank(),\n        strip.text = element_text(size = 8)) +\n  labs(fill = \"Activity\") +\n  facet_wrap(~year, ncol = 1)\n\n\n\n\n\n# We'll add an additional 'month_label' column that only includes the first week of each month.\ndata &lt;- data %&gt;%\n  mutate(\n    wday = factor(wday(date, label = TRUE), levels = rev(levels(wday(date, label = TRUE)))),\n    week = calc_week(date),\n    year = year(date),\n    month_label = ifelse(day(date) &lt;= 7, month(date, label = TRUE), NA)\n  )\n\n# Use ggplot to create the calendar plot\nggplot(data, aes(x = week, y = wday, fill = count)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradientn(colors = c(\"white\", \"darkgreen\")) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1),\n        axis.text.y = element_text(size = 8),\n        axis.title = element_blank(),\n        panel.grid = element_blank(),\n        strip.text = element_text(size = 8)) +\n  labs(fill = \"Activity\") +\n  facet_wrap(~year, ncol = 1) +\n  scale_x_continuous(breaks = data$week, labels = data$month_label) +\n  scale_y_discrete(labels = rev(levels(data$wday)))\n\n\n\n\n\n# Generate labels data frame\nlabels &lt;- data %&gt;%\n  filter(day(date) == 1) %&gt;%\n  select(week, month_label)\n\n# Use ggplot to create the calendar plot\nggplot(data, aes(x = week, y = wday, fill = count)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradientn(colors = c(\"white\", \"darkgreen\")) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1),\n        axis.text.y = element_text(size = 8),\n        axis.title = element_blank(),\n        panel.grid = element_blank(),\n        strip.text = element_text(size = 8)) +\n  labs(fill = \"Activity\") +\n  facet_wrap(~year, ncol = 1) +\n  scale_x_continuous(breaks = labels$week, labels = labels$month_label) +\n  scale_y_discrete(labels = rev(levels(data$wday)))\n\n\n\n\n\n# Generate labels data frame\nlabels &lt;- data %&gt;%\n  filter(day(date) == 1) %&gt;%\n  select(week, date) %&gt;%\n  mutate(month_label = format(date, \"%b\"))\n\n# Create a vector of breaks and labels for the x-axis\nbreaks_x &lt;- labels$week\nlabels_x &lt;- labels$month_label\n\n# Use ggplot to create the calendar plot\nggplot(data, aes(x = week, y = wday, fill = count)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradientn(colors = c(\"white\", \"darkgreen\")) +\n  theme_minimal() +\n  theme(\n    axis.text.x.top = element_text(angle = 0, hjust = 0.5, vjust=0.5),\n    axis.text.y = element_text(size = 8),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    strip.text = element_text(size = 8)\n  ) +\n  labs(fill = \"Activity\") +\n  facet_wrap(~year, ncol = 1) +\n  scale_x_continuous(breaks = breaks_x, labels = labels_x, position = \"top\") +\n  scale_y_discrete(labels = levels(data$wday))  + theme(aspect.ratio = 1/6)\n\n\n\n\n\n# Create a dataset for 3 years\nset.seed(123)\ndata &lt;- tibble(\n  date = seq(as.Date(\"2020-01-01\"), as.Date(\"2022-12-31\"), by = \"day\"),\n  count = rpois(length(date), 2)\n) %&gt;%\n  mutate(\n    wday = wday(date, label = TRUE),\n    week = week(date),\n    year = year(date),\n    month_label = ifelse(day(date) == 1, format(date, \"%b\"), NA)\n  )\n\n# Generate labels data frame\nlabels &lt;- data %&gt;%\n  filter(!is.na(month_label)) %&gt;%\n  select(week, month_label)\n\n# Create a vector of breaks and labels for the x-axis\nbreaks_x &lt;- labels$week\nlabels_x &lt;- labels$month_label\n\n# Use ggplot to create the calendar plot\nggplot(data, aes(x = week, y = wday, fill = count)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradientn(colors = c(\"white\", \"darkgreen\")) +\n  theme_minimal() +\n  theme(\n    axis.text.x.bottom = element_text(angle = 0, hjust = 0.5, vjust=0.5),\n    axis.text.y = element_text(size = 8),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    strip.text.x = element_text(size = 8),\n    strip.background = element_rect(fill = \"white\")\n  ) +\n  labs(fill = \"Activity\") +\n  facet_grid(year ~ ., switch = \"x\") +\n  scale_x_continuous(breaks = breaks_x, labels = labels_x) +\n  scale_y_discrete(labels = rev(levels(data$wday)))  # This reverses the y-axis\n\n\n\n\n\n# Create a dataset for 3 years\nset.seed(123)\ndata &lt;- tibble(\n  date = seq(as.Date(\"2020-01-01\"), as.Date(\"2022-12-31\"), by = \"day\"),\n  count = rpois(length(date), 2)\n) %&gt;%\n  mutate(\n    wday = wday(date, label = TRUE),\n    week = week(date),\n    year = year(date),\n    month = month(date),\n    month_label = ifelse(day(date) == 1, format(date, \"%b\"), NA)\n  )\n\n# Generate labels data frame\nlabels &lt;- data %&gt;%\n  filter(!is.na(month_label)) %&gt;%\n  distinct(week, .keep_all = TRUE)\n\n# Create a vector of breaks and labels for the x-axis\nbreaks_x &lt;- labels$week\nlabels_x &lt;- labels$month_label\n\n# Use ggplot to create the calendar plot\nggplot(data, aes(x = week, y = wday, fill = count)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradientn(colors = c(\"white\", \"darkgreen\")) +\n  theme_minimal() +\n  theme(\n    axis.text.x.bottom = element_text(angle = 0, hjust = 0.5, vjust=0.5),\n    axis.text.y = element_text(size = 8),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    strip.text = element_text(size = 8),\n    strip.placement = \"outside\",\n    strip.background = element_blank()\n  ) +\n  labs(fill = \"Activity\") +\n  facet_grid(\n    as.factor(year) ~ .,\n    scales = \"free_x\",\n    space = \"free_x\",\n    switch = \"y\",\n    labeller = label_parsed\n  ) +\n  scale_x_continuous(breaks = breaks_x, labels = labels_x) +\n  scale_y_discrete(labels = rev(levels(data$wday)))  # This reverses the y-axis\n\n\n\n\n\n# Create a dataset for 3 years\nset.seed(123)\ndata &lt;- tibble(\n  date = seq(as.Date(\"2020-01-01\"), as.Date(\"2022-12-31\"), by = \"day\"),\n  count = rpois(length(date), 2)\n) %&gt;%\n  mutate(\n    wday = wday(date, label = TRUE),\n    week = week(date),\n    year = year(date),\n    month = month(date),\n    month_label = ifelse(day(date) == 1 & wday(date) == 1, format(date, \"%b\"), NA)\n  )\n\n# Generate labels data frame\nlabels &lt;- data %&gt;%\n  filter(!is.na(month_label)) %&gt;%\n  distinct(week, .keep_all = TRUE)\n\n# Create a vector of breaks and labels for the x-axis\nbreaks_x &lt;- labels$week\nlabels_x &lt;- labels$month_label\n\n# Use ggplot to create the calendar plot\nggplot(data, aes(x = week, y = wday, fill = count)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradientn(colors = c(\"white\", \"darkgreen\")) +\n  theme_minimal() +\n  theme(\n    axis.text.x.bottom = element_text(angle = 0, hjust = 0.5, vjust=0.5),\n    axis.text.y = element_text(size = 8),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    strip.text = element_text(size = 8),\n    strip.placement = \"outside\",\n    strip.background = element_blank()\n  ) +\n  labs(fill = \"Activity\") +\n  facet_grid(\n    as.factor(year) ~ .,\n    scales = \"free_x\",\n    space = \"free_x\",\n    switch = \"y\",\n    labeller = labeller(year = label_both)\n  ) +\n  scale_x_continuous(breaks = breaks_x, labels = labels_x) +\n  scale_y_discrete(labels = rev(levels(data$wday)))  # This reverses the y-axis\n\n\n\n\n\n# Create a dataset for 3 years\nset.seed(123)\ndata &lt;- tibble(\n  date = seq(as.Date(\"2020-01-01\"), as.Date(\"2022-12-31\"), by = \"day\"),\n  count = rpois(length(date), 2)\n) %&gt;%\n  mutate(\n    wday = wday(date, label = TRUE),\n    week = week(date),\n    year = year(date),\n    month = month(date),\n    month_label = ifelse(day(date) == 1 | (month(date) != lag(month(date))), format(date, \"%b\"), NA)\n  )\n\n# Generate labels data frame\nlabels &lt;- data %&gt;%\n  filter(!is.na(month_label)) %&gt;%\n  distinct(week, .keep_all = TRUE)\n\n# Create a vector of breaks and labels for the x-axis\nbreaks_x &lt;- labels$week\nlabels_x &lt;- labels$month_label\n\n# Define a custom labeller function\ncustom_labeller &lt;- function(variable,value){\n  return(as.character(value))\n}\n\n# Use ggplot to create the calendar plot\nggplot(data, aes(x = week, y = wday, fill = count)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradientn(colors = c(\"white\", \"darkgreen\")) +\n  theme_minimal() +\n  theme(\n    axis.text.x.bottom = element_text(angle = 0, hjust = 0.5, vjust=0.5),\n    axis.text.y = element_text(size = 8),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    strip.text = element_text(size = 8),\n    strip.placement = \"outside\",\n    strip.background = element_blank()\n  ) +\n  labs(fill = \"Activity\") +\n  facet_grid(\n    as.factor(year) ~ .,\n    scales = \"free_x\",\n    space = \"free_x\",\n    switch = \"y\",\n    labeller = custom_labeller\n  ) +\n  scale_x_continuous(breaks = breaks_x, labels = labels_x) +\n  scale_y_discrete(labels = rev(levels(data$wday)))  # This reverses the y-axis\n\nWarning: The `labeller` API has been updated. Labellers taking `variable` and `value`\narguments are now deprecated.\nℹ See labellers documentation."
  },
  {
    "objectID": "garden/code/index.html",
    "href": "garden/code/index.html",
    "title": "Code",
    "section": "",
    "text": "library(tidyverse)\nThe mtcars dataset has rownames. This makes it so that we need another step to process. I use forcats::fct_reorder within ggplot.\nggplot(mtcars, aes(x = mpg, y = forcats::fct_reorder(rownames(mtcars), mpg))) +\n  geom_bar(stat = \"identity\")\nAnother way to do this would be to preprocess.\nmtcars &lt;- mtcars |&gt; rownames_to_column(\"model\")\nmtcars &lt;- mtcars |&gt;\n  mutate(model = forcats::fct_reorder(model, mpg))\nggplot(mtcars, aes(x = mpg, y = model)) +\n  geom_bar(stat = \"identity\")"
  },
  {
    "objectID": "garden/code/index.html#enhancing-the-plot",
    "href": "garden/code/index.html#enhancing-the-plot",
    "title": "Code",
    "section": "Enhancing the Plot",
    "text": "Enhancing the Plot\n\nggplot(mtcars, aes(x = mpg, y = model)) +\n  geom_bar(stat = \"identity\", width = .8) +\n  geom_text(aes(label = round(mpg)), hjust = 1.05, color  = \"white\") +\n  scale_x_continuous(expand = expansion(mult = c(0, .1))) +\n  theme(aspect.ratio = 2) +\n  theme(axis.ticks = element_blank()) +\n  theme(panel.grid.major.y = element_blank()) +\n  theme(panel.background = element_blank()) +\n  labs(x = NULL, \n       y = NULL,\n       title = \"Miles Per Gallon by Model\") +\n  theme(plot.title = element_text(color = \"#686868\", face = 'bold', size = 12, hjust = 0)) +\n  theme(plot.title.position = \"plot\")"
  },
  {
    "objectID": "garden/code/index.html#ideas",
    "href": "garden/code/index.html#ideas",
    "title": "Code",
    "section": "Ideas",
    "text": "Ideas\nImportant is readability. Understand it quickly. Make it simple. Match the chart to the message.1 (See bottom of document for source)\nIn the above case, adding the labels is a little too much. Instead, The Economist style offers a different approach. This is not to say that text labels are bad. For this chart, it “feels” better to leave out the clutter from the labels.\n\nMove the x axis text to the top of the chart\nAdd x axis label (mpg) to the right of “30” in the x axis ticks label.\n\n\nggplot(mtcars, aes(x = mpg, y = model)) +\n  geom_bar(stat = \"identity\", width = .7) +\n  scale_x_continuous(expand = expansion(mult = c(0, .1)), position = \"top\") +\n  theme(aspect.ratio = 2) +\n  theme(axis.ticks.y = element_blank()) +\n  theme(axis.ticks.x = element_line(color = \"grey\")) +\n  theme(panel.grid.major.y = element_blank()) +\n # theme(panel.background = element_blank()) +\n  labs(x = NULL, \n       y = NULL,\n       title = \"Totota Corolla had the highest fuel \\nefficiency in the mtcars dataset\",\n       subtitle = \"Fuel efficiency measured by miles per gallon\",\n       caption = \"Source: mtcars dataset\") +\n  theme(plot.title = element_text(color = \"#686868\", face = 'bold', size = 12, hjust = 0)) +\n  theme(plot.subtitle = element_text(color = \"#686868\", size = 9, hjust = 0)) +\n  theme(plot.caption = element_text(color = \"#686868\")) +\n  theme(plot.title.position = \"plot\") +\n  theme(plot.caption.position = \"plot\") +\n  theme(axis.title.x = element_text(margin = margin(r = 10))) \n\n\n\n\nI just checked on my phone, and this isn’t mobile friendly.\n\nggplot(mtcars, aes(x = mpg, y = model)) +\n  geom_bar(stat = \"identity\", width = .7) +\n  scale_x_continuous(expand = expansion(mult = c(0, .1)), position = \"top\") +\n # theme(aspect.ratio = 2) +\n  theme(axis.ticks.y = element_blank()) +\n  theme(axis.ticks.x = element_line(color = \"grey\")) +\n  theme(panel.grid.major.y = element_blank()) +\n # theme(panel.background = element_blank()) +\n  labs(x = NULL, \n       y = NULL,\n       title = \"Totota Corolla had the highest fuel \\nefficiency in the mtcars dataset\",\n       subtitle = \"Fuel efficiency measured by miles per gallon\",\n       caption = \"Source: mtcars dataset\") +\n  theme(plot.title = element_text(color = \"#686868\", face = 'bold', size = 12, hjust = 0)) +\n  theme(plot.subtitle = element_text(color = \"#686868\", size = 9, hjust = 0)) +\n  theme(plot.caption = element_text(color = \"#686868\")) +\n  theme(plot.title.position = \"plot\") +\n  theme(plot.caption.position = \"plot\") +\n  theme(axis.title.x = element_text(margin = margin(r = 10))) \n\n\n\n\nThis was much better. However, if you are using RStudio, the inline plot in the qmd file does not reflect the figure sizes by width. The preview/render does reflect the new widths.\nThe font sizes are not readable. Partly because there are 32 cars, it may be a challenge.\n\nggplot(mtcars, aes(x = mpg, y = model)) +\n  geom_bar(stat = \"identity\", width = .7) +\n  scale_x_continuous(expand = expansion(mult = c(0, .1)), position = \"top\") +\n  theme(axis.ticks.y = element_blank()) +\n  theme(axis.ticks.x = element_line(color = \"grey\")) +\n  theme(panel.grid.major.y = element_blank()) +\n  labs(x = NULL, \n       y = NULL,\n       title = \"Totota Corolla had the highest fuel \\nefficiency in the mtcars dataset\",\n       subtitle = \"Fuel efficiency measured by miles per gallon\",\n       caption = \"Source: mtcars dataset\") +\n  theme(plot.title = element_text(color = \"#686868\", face = 'bold', size = 16, hjust = 0)) +\n  theme(plot.subtitle = element_text(color = \"#686868\", size = 11, hjust = 0)) +\n  theme(plot.caption = element_text(color = \"#686868\")) +\n  theme(plot.title.position = \"plot\") +\n  theme(plot.caption.position = \"plot\") +\n  theme(axis.title.x = element_text(margin = margin(r = 10))) +\n  theme(axis.text.y = element_text(size = 12))\n\n\n\n\nThis was much more readable. Again, the Quarto inline plot is deceiving.\nSee screenshot:\n\nLet’s make some more changes: 1. Increase subtitle font size 2. 3.\n\nggplot(mtcars, aes(x = mpg, y = model)) +\n  geom_bar(stat = \"identity\", width = .7) +\n  scale_x_continuous(expand = expansion(mult = c(0, .1)), position = \"top\") +\n  theme(axis.ticks.y = element_blank()) +\n  theme(axis.ticks.x = element_line(color = \"grey\")) +\n  theme(panel.grid.major.y = element_blank()) +\n  labs(x = NULL, \n       y = NULL,\n       title = \"Totota Corolla had the highest fuel \\nefficiency in the mtcars dataset\",\n       subtitle = \"Fuel efficiency measured by miles per gallon\",\n       caption = \"Source: mtcars dataset\") +\n  theme(plot.title = element_text(color = \"#686868\", face = 'bold', size = 16, hjust = 0)) +\n  theme(plot.subtitle = element_text(color = \"#686868\", size = 14, hjust = 0)) +\n  theme(plot.caption = element_text(color = \"#686868\")) +\n  theme(plot.title.position = \"plot\") +\n  theme(plot.caption.position = \"plot\") +\n  theme(axis.title.x = element_text(margin = margin(r = 10))) +\n  theme(axis.text.y = element_text(size = 12))"
  },
  {
    "objectID": "garden/code/index.html#customising-fonts",
    "href": "garden/code/index.html#customising-fonts",
    "title": "Code",
    "section": "Customising Fonts",
    "text": "Customising Fonts\n\nlibrary(showtext)\nfont_add_google(\"Open Sans\")\nshowtext_auto()\n\nTo make this work with quarto or rmarkdown, we need to specify fig.showtext = TRUE https://github.com/yixuan/showtext/issues/51#issuecomment-879535052\n\nggplot(mtcars, aes(x = mpg, y = model)) +\n  geom_bar(stat = \"identity\", width = .7) +\n  scale_x_continuous(expand = expansion(mult = c(0, .1)), position = \"top\") +\n  theme(axis.ticks.y = element_blank()) +\n  theme(axis.ticks.x = element_line(color = \"grey\")) +\n  theme(panel.grid.major.y = element_blank()) +\n  labs(x = NULL, \n       y = NULL,\n       title = \"Totota Corolla had the highest fuel \\nefficiency in the mtcars dataset\",\n       subtitle = \"Fuel efficiency measured by miles per gallon\",\n       caption = \"Source: mtcars dataset\") +\n  theme(plot.title = element_text(color = \"#686868\", face = 'bold', size = 16, hjust = 0)) +\n  theme(plot.subtitle = element_text(color = \"#686868\", size = 12, hjust = 0)) +\n  theme(plot.caption = element_text(color = \"#686868\")) +\n  theme(plot.title.position = \"plot\") +\n  theme(plot.caption.position = \"plot\") +\n  theme(axis.title.x = element_text(margin = margin(r = 10))) +\n  theme(axis.text.y = element_text(size = 12)) +\n  theme(text = element_text(family = \"Open Sans\"))\n\n\n\n\nTO DO:\nWhat is a good aspect ratio for a bar chart?\nFor later:\n“Millennials more likely… bar chart has labels”. https://www.pewresearch.org/short-reads/2017/08/30/most-americans-especially-millennials-say-libraries-can-help-them-find-reliable-trustworthy-information/\nevamayray flipbookr\nSurvey data example:\nhttps://www.pewresearch.org/short-reads/2023/05/26/family-time-is-far-more-important-than-other-aspects-of-life-for-most-americans/\nSources:\n\n(Source: Analyst Academy - https://www.youtube.com/watch?v=cGGkAGBre3A)\n\n\n# Addressing tidyverse warnings example\nlibrary(dplyr)\nconflicted::conflicts_prefer(dplyr::filter)\n\n[conflicted] Will prefer dplyr::filter over any other package."
  },
  {
    "objectID": "garden/gardening/index.html",
    "href": "garden/gardening/index.html",
    "title": "Gardening",
    "section": "",
    "text": "Digital Gardening\nInspired by digital gardening, I want to write down thoughts as I explore, wander, refine, and share. My creative process is more cyclical. I start working on things, then procrastinate, lose interest, and find interest again. This goes on and on and sometimes I lead it towards the end. So there are a lot of unfinished things."
  },
  {
    "objectID": "garden/report/index.html",
    "href": "garden/report/index.html",
    "title": "Report",
    "section": "",
    "text": "library(tidyverse)\n\n\ndata &lt;- read.csv(\"../../data/sample_data.csv\")\ndata &lt;- data |&gt; select(-1)\n\n\npsych::describe(data) |&gt;\n    select(-vars) |&gt;\n    knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nn\nmean\nsd\nmedian\ntrimmed\nmad\nmin\nmax\nrange\nskew\nkurtosis\nse\n\n\n\n\nq_1\n100\n3.580\n0.9865766\n4.0\n3.60000\n1.4826\n2\n5.0\n3.0\n-0.0330908\n-1.0624148\n0.0986577\n\n\nq_2\n100\n2.120\n0.8678314\n2.0\n2.05000\n1.4826\n1\n4.0\n3.0\n0.5046826\n-0.3606769\n0.0867831\n\n\nq_3\n100\n3.810\n0.8491826\n4.0\n3.83750\n1.4826\n1\n5.0\n4.0\n-0.4184141\n0.0756473\n0.0849183\n\n\nq_4\n100\n2.440\n0.8204458\n2.0\n2.43750\n1.4826\n1\n4.0\n3.0\n0.0274649\n-0.5684858\n0.0820446\n\n\nq_5\n100\n3.660\n1.0072465\n4.0\n3.72500\n1.4826\n1\n5.0\n4.0\n-0.4660038\n-0.4328810\n0.1007246\n\n\nq_6\n100\n2.380\n1.0128468\n2.0\n2.32500\n1.4826\n1\n5.0\n4.0\n0.3535426\n-0.5476011\n0.1012847\n\n\nq_7\n100\n3.720\n1.0158342\n4.0\n3.78750\n1.4826\n1\n5.0\n4.0\n-0.4005728\n-0.7245773\n0.1015834\n\n\nq_8\n100\n2.330\n0.9540451\n2.0\n2.27500\n1.4826\n1\n5.0\n4.0\n0.3477466\n-0.5246394\n0.0954045\n\n\nq_9\n100\n3.790\n0.9243616\n4.0\n3.85000\n1.4826\n1\n5.0\n4.0\n-0.4150614\n-0.3306047\n0.0924362\n\n\nq_10\n100\n2.360\n0.7456270\n2.0\n2.37500\n0.7413\n1\n4.0\n3.0\n0.1903611\n-0.2772442\n0.0745627\n\n\nsus\n100\n67.325\n6.9654178\n67.5\n67.53125\n7.4130\n45\n82.5\n37.5\n-0.3558209\n0.2344744\n0.6965418\n\n\n\n\n\n\nlabels &lt;- tribble(\n    ~var, ~label,\n    \"q_1\", \"I think that I would like to use this system frequently\",\n    \"q_2\", \"I found the system unnecessarily complex\",\n    \"q_3\", \"I thought the system was easy to use\",\n    \"q_4\", \"I think that I would need the support of a technical person to be able to use this system\",\n    \"q_5\", \"I found the various functions in this system were well integrated\",\n    \"q_6\", \"I thought there was too much inconsistency in this system\",\n    \"q_7\", \"I would imagine that most people would learn to use this system very quickly\",\n    \"q_8\", \"I found the system very cumbersome to use\",\n    \"q_9\", \"I felt very confident using the system\",\n    \"q_10\", \"I needed to learn a lot of things before I could get going with this system\"\n)\n\n\ndata_long &lt;- data |&gt;\n    select(-sus) |&gt;\n    gather() |&gt;\n    rename(var = key) |&gt; \n    mutate(text = case_match( \n        value,\n        1 ~ \"Strongly disagree\",\n        2 ~ \"Somewhat disagree\",\n        3 ~ \"Neither\",\n        4 ~ \"Somewhat agree\",\n        5 ~ \"Strongly agree\"\n    )) |&gt; \n    left_join(labels, by = \"var\") |&gt;\n    select(var, label, value, text)\n\n\ndata_long &lt;- data_long |&gt; mutate(var = fct_inorder(var))\n\n\ndata_long |&gt; \n    ggplot(aes(x = value)) +\n    geom_density() +\n    facet_wrap(~var, ncol = 5) +\n    labs(\n        title = \"Distribution of Each Question in the System Usability Scale\",\n        x = NULL, y = NULL,\n        subtitle = \"X axis values are from 1 to 5\"\n    ) +\n    theme(\n        axis.text = element_blank(),\n        axis.ticks = element_blank()\n    )\n\n\n\n\nReverse code this so it runs in the same direction"
  },
  {
    "objectID": "garden/survey/index.html",
    "href": "garden/survey/index.html",
    "title": "Simulated SUS Datasets",
    "section": "",
    "text": "library(tidyverse)\n\n\nskewed_df &lt;- function(n = 100, shape1 = 2.3, shape2 = 6.8, seed = 1234) {\n  skewed &lt;- function(n, skew = 'right', shape1, shape2, seed) {\n    set.seed(seed)\n    if(skew == 'right') {\n      skewed &lt;- rbeta(n, shape1, shape2)\n    } else if (skew == 'left') {\n      skewed &lt;- rbeta(n, shape2, shape1)\n    }\n    skewed_scaled &lt;- 1 + 4 * skewed\n    return(round(skewed_scaled))\n  }\n  \n  set.seed(seed)\n  seeds &lt;- seed:(seed + 9)\n  \n  df &lt;- data.frame(matrix(ncol = length(seeds), nrow = n))\n  \n  for (i in 1:length(seeds)) {\n    skew_direction &lt;- ifelse(i %% 2 == 0, 'right', 'left')\n    if(i == 4 || i == 10) {\n      shape1_adj &lt;- shape1 * 2  # Increase shape1 to make values larger\n      shape2_adj &lt;- shape2 * 2  # Increase shape2 to make values larger\n    } else {\n      shape1_adj &lt;- shape1\n      shape2_adj &lt;- shape2\n    }\n    df[,i] &lt;- skewed(n, skew_direction, shape1_adj, shape2_adj, seeds[i])\n    names(df)[i] &lt;- paste('q', i, sep = '_')\n  }\n  return(df)\n}\n\ncalc_sus &lt;- function(data) {\n  data |&gt; \n    mutate(total_odd = rowSums(select(data, ends_with(c(\"1\", \"3\", \"5\", \"7\", \"9\"))), na.rm = TRUE)) |&gt; \n  mutate(total_even = rowSums(select(data, ends_with(c(\"0\", \"2\", \"4\", \"6\", \"8\"))), na.rm = TRUE)) |&gt; \n  mutate(total_odd = total_odd - 5) |&gt; \n  mutate(total_even = 25 - total_even) |&gt; \n  mutate(total = total_odd + total_even) |&gt; \n  mutate(sus = total * 2.5) |&gt; select(-total_odd, -total_even, -total)\n}\n\n\nskewed_df(100, 1, 2, 1234) |&gt; calc_sus()\n\n    q_1 q_2 q_3 q_4 q_5 q_6 q_7 q_8 q_9 q_10  sus\n1     4   3   3   2   5   2   2   2   4    2 67.5\n2     5   1   3   1   3   2   2   2   3    2 70.0\n3     4   2   5   2   4   4   4   3   3    2 67.5\n4     4   2   1   3   2   5   3   4   5    3 45.0\n5     3   1   4   1   4   2   3   2   5    2 77.5\n6     3   2   5   2   5   2   4   2   3    2 75.0\n7     2   2   2   2   5   2   5   3   3    2 65.0\n8     3   1   4   3   3   2   4   2   4    2 70.0\n9     2   2   5   2   4   3   4   2   5    1 75.0\n10    2   1   5   2   5   3   5   1   5    2 82.5\n11    4   4   5   4   3   2   3   3   2    2 55.0\n12    5   3   3   2   4   1   2   2   2    1 67.5\n13    4   4   5   3   4   2   5   2   4    3 70.0\n14    3   2   4   3   4   2   5   1   5    3 75.0\n15    2   2   3   2   4   3   4   3   3    2 60.0\n16    5   3   3   2   5   4   3   2   4    2 67.5\n17    4   3   3   2   4   2   5   2   3    3 67.5\n18    3   2   4   1   4   3   4   2   4    2 72.5\n19    3   2   3   3   3   3   5   2   4    2 65.0\n20    4   3   5   2   5   1   4   3   1    3 67.5\n21    3   2   3   2   3   3   5   2   5    2 70.0\n22    2   3   4   2   3   1   4   2   4    2 67.5\n23    4   3   4   3   4   2   4   2   4    1 72.5\n24    2   2   4   2   4   4   5   4   3    2 60.0\n25    4   2   4   2   4   1   4   4   4    2 72.5\n26    5   4   4   1   3   4   4   2   4    2 67.5\n27    3   1   3   4   4   1   3   1   5    2 72.5\n28    3   3   5   3   2   1   3   1   3    2 65.0\n29    3   1   5   3   5   3   3   1   5    4 72.5\n30    3   1   5   3   5   3   3   2   3    4 65.0\n31    3   2   3   3   3   4   2   1   4    2 57.5\n32    5   2   4   3   4   1   2   1   3    2 72.5\n33    2   1   4   4   3   3   5   1   5    1 72.5\n34    3   2   3   1   4   3   4   2   5    1 75.0\n35    2   4   4   3   5   2   5   2   3    2 65.0\n36    2   2   4   2   4   4   2   2   5    1 65.0\n37    3   2   5   2   4   1   5   3   3    3 72.5\n38    3   3   5   3   3   4   2   2   4    2 57.5\n39    3   2   4   4   4   3   4   3   2    4 52.5\n40    2   4   3   2   5   2   4   4   3    2 57.5\n41    2   2   5   3   3   4   4   1   3    3 60.0\n42    3   2   4   3   5   1   5   1   4    3 77.5\n43    4   1   4   2   2   2   4   3   4    2 70.0\n44    5   2   3   3   3   1   3   2   3    3 65.0\n45    5   2   5   3   3   2   4   1   4    2 77.5\n46    4   2   3   2   4   3   2   4   2    3 52.5\n47    4   1   4   2   2   2   4   3   5    2 72.5\n48    3   1   3   4   5   2   4   3   4    2 67.5\n49    4   2   3   2   4   2   2   3   3    2 62.5\n50    5   3   5   3   2   1   4   3   5    4 67.5\n51    2   3   4   4   4   2   3   3   4    3 55.0\n52    5   1   4   1   4   3   5   2   4    3 80.0\n53    5   2   4   3   4   3   3   1   3    2 70.0\n54    4   2   3   2   4   2   4   3   3    3 65.0\n55    4   4   5   3   4   2   4   2   4    2 70.0\n56    3   2   4   3   3   2   4   4   4    3 60.0\n57    3   2   4   2   4   5   4   2   3    2 62.5\n58    4   2   4   1   4   4   3   1   3    3 67.5\n59    5   3   4   3   4   2   3   2   4    4 65.0\n60    3   3   5   1   5   1   3   2   4    3 75.0\n61    3   2   4   2   3   2   3   2   4    3 65.0\n62    3   2   3   3   2   3   4   3   5    3 57.5\n63    3   2   4   1   4   1   4   2   5    1 82.5\n64    3   1   3   2   3   3   4   2   5    2 70.0\n65    5   3   4   3   4   2   3   1   4    2 72.5\n66    4   2   4   1   4   1   2   2   4    1 77.5\n67    4   3   3   2   3   3   3   3   5    3 60.0\n68    3   3   4   2   5   1   5   2   2    2 72.5\n69    3   4   4   3   5   1   4   3   3    4 60.0\n70    2   2   5   1   5   2   5   4   4    3 72.5\n71    4   1   4   2   2   2   5   3   3    3 67.5\n72    4   2   5   3   4   4   3   2   4    2 67.5\n73    5   2   4   3   4   1   4   2   5    2 80.0\n74    5   1   3   3   2   3   5   4   5    3 65.0\n75    3   2   4   3   3   2   1   1   4    3 60.0\n76    5   1   3   3   3   3   3   2   4    3 65.0\n77    5   1   3   2   5   3   5   3   3    1 77.5\n78    5   2   4   2   3   3   2   3   3    2 62.5\n79    4   2   4   1   5   3   5   5   4    3 70.0\n80    3   2   5   4   2   2   5   1   5    3 70.0\n81    4   2   4   2   2   2   4   1   4    3 70.0\n82    3   1   4   2   1   3   4   1   4    1 70.0\n83    4   1   3   3   2   3   2   4   4    3 52.5\n84    4   1   2   3   3   2   5   3   3    2 65.0\n85    4   1   3   4   1   2   4   3   5    3 60.0\n86    4   2   4   3   4   2   4   4   2    2 62.5\n87    3   2   2   2   3   2   5   4   5    2 65.0\n88    3   1   2   2   4   1   4   2   4    2 72.5\n89    2   2   5   2   5   4   3   1   4    3 67.5\n90    5   2   3   3   4   1   2   2   5    2 72.5\n91    4   2   4   3   3   1   4   2   3    3 67.5\n92    5   3   4   2   4   3   3   3   4    2 67.5\n93    4   3   4   3   4   2   3   2   3    2 65.0\n94    4   2   4   2   4   2   3   1   4    2 75.0\n95    4   3   4   2   2   1   5   3   4    3 67.5\n96    3   3   3   3   5   3   5   3   4    2 65.0\n97    2   2   3   2   4   3   3   3   5    3 60.0\n98    5   1   4   4   3   3   4   2   2    3 62.5\n99    4   4   3   3   3   4   5   3   4    2 57.5\n100   5   1   4   2   5   3   4   3   3    2 75.0"
  },
  {
    "objectID": "garden/ux/anova-task-performance.html",
    "href": "garden/ux/anova-task-performance.html",
    "title": "anova",
    "section": "",
    "text": "# Import necessary libraries\nlibrary(ggplot2)\nlibrary(ez)  \nlibrary(car)\n\nLoading required package: carData\n\n# Set seed for reproducibility\nset.seed(123)\n\n# Define the groups and tasks\nGroup &lt;- rep(c(\"Android\", \"Apple\"), each = 150)\nTask &lt;- rep(c(\"Sitting\", \"Standing\", \"Walking\"), times = 100)\n\n# Define performance based on group and task\nPerformance &lt;- rnorm(300)\nPerformance[Group == \"Android\" & Task == \"Sitting\"] &lt;- rnorm(sum(Group == \"Android\" & Task == \"Sitting\"), mean = 7, sd = 2)\nPerformance[Group == \"Android\" & Task == \"Standing\"] &lt;- rnorm(sum(Group == \"Android\" & Task == \"Standing\"), mean = 6, sd = 2)\nPerformance[Group == \"Android\" & Task == \"Walking\"] &lt;- rnorm(sum(Group == \"Android\" & Task == \"Walking\"), mean = 5, sd = 2)\nPerformance[Group == \"Apple\" & Task == \"Sitting\"] &lt;- rnorm(sum(Group == \"Apple\" & Task == \"Sitting\"), mean = 5, sd = 2)\nPerformance[Group == \"Apple\" & Task == \"Standing\"] &lt;- rnorm(sum(Group == \"Apple\" & Task == \"Standing\"), mean = 5, sd = 2)\nPerformance[Group == \"Apple\" & Task == \"Walking\"] &lt;- rnorm(sum(Group == \"Apple\" & Task == \"Walking\"), mean = 7, sd = 2)\n\n# Create a dataframe\ndata &lt;- data.frame(Group, Task, Performance)\n\n# Perform ANOVA\nmod &lt;- aov(Performance ~ Group*Task, data = data)\nsummary(mod)\n\n             Df Sum Sq Mean Sq F value   Pr(&gt;F)    \nGroup         1    1.0    0.95   0.244   0.6216    \nTask          2   34.3   17.16   4.388   0.0132 *  \nGroup:Task    2  158.5   79.25  20.266 5.68e-09 ***\nResiduals   294 1149.6    3.91                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# Perform Mauchly's Test for Sphericity\nezANOVA(data,\n        dv = Performance,\n        wid = Group,\n        within = Task,\n        type = 3,\n        detailed = TRUE)\n\nWarning: Converting \"Group\" to factor for ANOVA.\n\n\nWarning: Converting \"Task\" to factor for ANOVA.\n\n\nWarning: Collapsing data to cell means. *IF* the requested effects are a subset\nof the full design, you must use the \"within_full\" argument, else results may\nbe inaccurate.\n\n\nWarning in pf(table[, \"F\"], pmin(1, table2[, \"HFe\"]) * table[, \"DFn\"], pmin(1,\n: NaNs produced\n\n\n$ANOVA\n       Effect DFn DFd         SSn        SSd           F           p p&lt;.05\n1 (Intercept)   1   1 205.4439676 0.01909546 10758.78332 0.006137409     *\n2        Task   2   2   0.6863365 3.16985214     0.21652 0.822016871      \n        ges\n1 0.9847150\n2 0.1771061\n\n$`Mauchly's Test for Sphericity`\n  Effect            W   p p&lt;.05\n2   Task 9.918122e-17 NaN    NA\n\n$`Sphericity Corrections`\n  Effect GGe     p[GG] p[GG]&lt;.05 HFe p[HF] p[HF]&lt;.05\n2   Task 0.5 0.7227404            -1   NaN        NA\n\n# Plot the data with facets for each task\n\n\nggplot(data, aes(x = Group, y = Performance, color = Group)) +\n  geom_point(pch = 21, position = position_jitterdodge(dodge.width = 0.75)) +\n  geom_boxplot(alpha = 0.1, width = 0.2) +\n  stat_summary(fun = median, geom = \"label\", alpha = .5, color = 'white', fill = 'black', aes(label = round(after_stat(y), 1)), vjust = 0.5) +\n  labs(title = \"Androids do better during sitting and standing. Apple does better while walking.\",\n       subtitle = \"Performance Ratings (higher scores are better)\",\n       x = NULL,\n       y = NULL,\n       color = \"Group\") +\n  facet_grid(. ~ Task) +\n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "garden/ux/benchmark_scores.html",
    "href": "garden/ux/benchmark_scores.html",
    "title": "benchmark_scores",
    "section": "",
    "text": "library(uxr)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.1     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\nscores &lt;- 80 + 23 * scale(rnorm(172)) # 80 = mean, 23 = sd\ndata &lt;- data.frame(scores = scores)\nbenchmark_score(data, scores, 67)\n\n\n\n\n── Compare Score with a Benchmark ──────────────────────────────────────────────\n\n\nWe can be 100% confident that the true score is between 67 and 93\n\n\n  term                    result  \n  mean                        80  \n  sd                          23  \n  se                    1.753734  \n  n                          172  \n  df                         171  \n  probability       2.732705e-12  \n  tail                       one  \n  confidence                   1  \n  margin_of_error             13  \n  t                     7.412757  \n  lower_ci                    67  \n  upper_ci                    93  \n\n\n\nbenchmark_score(mean = 80, sd = 23, n = 172, benchmark = 67, input = \"values\", output = \"tibble\")\n\n# A tibble: 1 × 13\n   mean    sd    se     n    df probability tail  confidence margin_of_error\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt;      &lt;dbl&gt;           &lt;dbl&gt;\n1    80    23  1.75   172   171    2.73e-12 one         1.00              13\n# ℹ 4 more variables: t &lt;dbl&gt;, lower_ci &lt;dbl&gt;, upper_ci &lt;dbl&gt;,\n#   output_text &lt;chr&gt;\n\n\n\nresult &lt;- purrr::map_dfr(c(60, 73, 57, 70, 67, 59, 75), function(mean) benchmark_score(\n  benchmark = 67, mean = mean, sd = 23, n = 172, input = \"values\", output = \"tibble\"))\n\n\nresult\n\n# A tibble: 7 × 13\n   mean    sd    se     n    df  probability tail  confidence margin_of_error\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;        &lt;dbl&gt; &lt;chr&gt;      &lt;dbl&gt;           &lt;dbl&gt;\n1    60    23  1.75   172   171 0.0000486    one        1.00               -7\n2    73    23  1.75   172   171 0.000390     one        1.00                6\n3    57    23  1.75   172   171 0.0000000255 one        1.00              -10\n4    70    23  1.75   172   171 0.0445       one        0.956               3\n5    67    23  1.75   172   171 0.5          one        0.5                 0\n6    59    23  1.75   172   171 0.00000482   one        1.00               -8\n7    75    23  1.75   172   171 0.00000482   one        1.00                8\n# ℹ 4 more variables: t &lt;dbl&gt;, lower_ci &lt;dbl&gt;, upper_ci &lt;dbl&gt;,\n#   output_text &lt;chr&gt;\n\n\nTO DO: check lower_ci\n\ndata &lt;- data.frame(time = c(60, 53, 70, 42, 62, 43, 81))\nbenchmark_time(data, column = time, benchmark = 60, alpha = 0.05)\n\n\n\n\n── Compare Time with a Benchmark ───────────────────────────────────────────────\n\n\n  term          t.result_table.  \n  lower_ci                 45.8  \n  upper_ci                 71.7  \n  t                       0.509  \n  probability             0.314"
  },
  {
    "objectID": "garden/ux/csat.html",
    "href": "garden/ux/csat.html",
    "title": "csat",
    "section": "",
    "text": "library(ggplot2)\n\n# Set the seed to make the example reproducible\nset.seed(123)\n\n# Define the number of points to generate for each group and time point\nnum_points &lt;- 10\n\n# Create a dataset\nTime &lt;- rep(1:10, each = 3 * num_points)\nGroup &lt;- rep(rep(c(\"Group1\", \"Group2\", \"Group3\"), each = num_points), times = 10)\nSatisfaction &lt;- rnorm(3 * 10 * num_points, mean = 8, sd = 3)\nAlpha &lt;- rep(c(1, 1, 1), each = num_points, times = 10)\n\ndata &lt;- data.frame(Time, Group, Satisfaction, Alpha)\n\n# Calculate group means\ngroup_means &lt;- aggregate(Satisfaction ~ Time + Group, data, mean)\n\n# Plot the dataset\n\nggplot(data, aes(x = factor(Time), y = Satisfaction, group = Group)) +\n  geom_point(aes(color = Group, alpha = 0.1), size = 3, position = position_jitterdodge(dodge.width = 0.75)) +\n  geom_line(data = group_means, aes(color = Group), size = 1) +\n  scale_alpha_continuous(range = c(0.3, 0.3)) +\n  scale_y_continuous(limits = c(0, 10)) +\n  theme_minimal() +\n  labs(title = \"Change in Customer Satisfaction Over Time\",\n       x = \"Time\",\n       y = \"Customer Satisfaction\",\n       color = \"Group\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning: Removed 73 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "garden/ux/index.html",
    "href": "garden/ux/index.html",
    "title": "index",
    "section": "",
    "text": "# Load required library\nlibrary(ggplot2)\n\n# Create a dataset\nset.seed(123)\nTime &lt;- rep(1:10, each = 3)\nGroup &lt;- rep(c(\"Group1\", \"Group2\", \"Group3\"), times = 10)\nSatisfaction &lt;- rnorm(30, mean = 5, sd = 2)\nAlpha &lt;- rep(c(0.3, 0.3, 0.3), times = 10)\n\ndata &lt;- data.frame(Time, Group, Satisfaction, Alpha)\n\n# Plot the dataset\nggplot(data, aes(x = Time, y = Satisfaction, group = Group, color = Group)) +\n  geom_line(size = 1) +\n  geom_point(aes(alpha = Alpha), size = 3) +\n  scale_alpha_continuous(range = c(0.3, 0.3)) +\n  theme_minimal() +\n  labs(title = \"Change in Customer Satisfaction Over Time\",\n       x = \"Time\",\n       y = \"Customer Satisfaction\",\n       color = \"Group\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n# Load required libraries\nlibrary(ggplot2)\nlibrary(ez)  # for Mauchly's Test\nlibrary(car)  # for Anova function\n\nLoading required package: carData\n\n# Create a dataset\nset.seed(123)\nGroup &lt;- rep(c(\"Android\", \"Apple\"), each = 150)\nTask &lt;- rep(c(\"Sitting\", \"Standing\", \"Walking\"), times = 100)\nPerformance &lt;- rnorm(300, mean = 5, sd = 2)\n\ndata &lt;- data.frame(Group, Task, Performance)\n\n# Conduct an ANOVA\nmod &lt;- aov(Performance ~ Group*Task, data = data)\nsummary(mod)\n\n             Df Sum Sq Mean Sq F value Pr(&gt;F)  \nGroup         1    4.1   4.150   1.172 0.2799  \nTask          2    2.9   1.448   0.409 0.6647  \nGroup:Task    2   21.6  10.811   3.053 0.0487 *\nResiduals   294 1041.2   3.541                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# Conduct Mauchly's Test for Sphericity\nezANOVA(data,\n        dv = Performance,\n        wid = Group,\n        within = Task,\n        type = 3,\n        detailed = TRUE)\n\nWarning: Converting \"Group\" to factor for ANOVA.\n\n\nWarning: Converting \"Task\" to factor for ANOVA.\n\n\nWarning: Collapsing data to cell means. *IF* the requested effects are a subset\nof the full design, you must use the \"within_full\" argument, else results may\nbe inaccurate.\n\n\nWarning in log(det(U)): NaNs produced\n\n\n$ANOVA\n       Effect DFn DFd          SSn        SSd            F          p p&lt;.05\n1 (Intercept)   1   1 154.16143788 0.08299064 1857.5762688 0.01476824     *\n2        Task   2   2   0.05793991 0.43242499    0.1339884 0.88184327      \n        ges\n1 0.9966678\n2 0.1010541\n\n# Plot the data\nggplot(data, aes(x = Task, y = Performance, fill = Group)) +\n  geom_boxplot() +\n  theme_minimal() +\n  labs(title = \"Task Performance by Group\",\n       x = \"Task\",\n       y = \"Performance\",\n       fill = \"Group\") +\n  facet_grid(. ~ Group)\n\n\n\n\n\n# Load ggplot2\nlibrary(ggplot2)\n\n# Create data for Satisfaction\nset.seed(1)\ndata_satisfaction &lt;- data.frame(User = 1:100, Satisfaction = sample(1:5, 100, replace = TRUE))\nggplot(data_satisfaction, aes(x = Satisfaction)) +\n  geom_bar(fill = \"steelblue\") +\n  labs(title = \"User Satisfaction\", x = \"Satisfaction Rating\", y = \"Count\") +\n  theme_minimal()\n\n\n\n# Create data for Task Completion\ndata_task_completion &lt;- data.frame(User = 1:100, Task_Completion = sample(c(\"Yes\", \"No\"), 100, replace = TRUE))\nggplot(data_task_completion, aes(x = Task_Completion)) +\n  geom_bar(fill = \"steelblue\") +\n  labs(title = \"Task Completion\", x = \"Task Completed\", y = \"Count\") +\n  theme_minimal()\n\n\n\n# Create data for Time-On-Task\ndata_time_on_task &lt;- data.frame(User = 1:100, Time_On_Task = rnorm(100, 5, 2))\nggplot(data_time_on_task, aes(x = Time_On_Task)) +\n  geom_histogram(binwidth = 0.5, fill = \"steelblue\") +\n  labs(title = \"Time-On-Task\", x = \"Time (minutes)\", y = \"Count\") +\n  theme_minimal()\n\n\n\n# Create data for Error Rate\ndata_error_rate &lt;- data.frame(User = 1:100, Error_Rate = sample(0:5, 100, replace = TRUE))\nggplot(data_error_rate, aes(x = Error_Rate)) +\n  geom_bar(fill = \"steelblue\") +\n  labs(title = \"Error Rate\", x = \"Number of Errors\", y = \"Count\") +\n  theme_minimal()\n\n\n\n# Create data for Learnability\ndata_learnability &lt;- data.frame(User = 1:100, Learnability = rnorm(100, 5, 2))\nggplot(data_learnability, aes(x = Learnability)) +\n  geom_histogram(binwidth = 0.5, fill = \"steelblue\") +\n  labs(title = \"Learnability\", x = \"Learnability Score\", y = \"Count\") +\n  theme_minimal()\n\n\n\n\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following object is masked from 'package:car':\n\n    recode\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Create point estimates and confidence intervals for Task Completion\ntask_completion_summary &lt;- data_task_completion %&gt;%\n  summarise(Completion_Rate = sum(Task_Completion == \"Yes\") / n(),\n            Lower = Completion_Rate - 1.96*sqrt((Completion_Rate*(1-Completion_Rate))/n()),\n            Upper = Completion_Rate + 1.96*sqrt((Completion_Rate*(1-Completion_Rate))/n()))\n\n# Create point estimates and confidence intervals for Error Rate\nerror_rate_summary &lt;- data_error_rate %&gt;%\n  summarise(Mean = mean(Error_Rate),\n            Lower = Mean - 1.96*sd(Error_Rate)/sqrt(n()),\n            Upper = Mean + 1.96*sd(Error_Rate)/sqrt(n()))\n\n# Create point estimates and confidence intervals for Learnability\nlearnability_summary &lt;- data_learnability %&gt;%\n  summarise(Mean = mean(Learnability),\n            Lower = Mean - 1.96*sd(Learnability)/sqrt(n()),\n            Upper = Mean + 1.96*sd(Learnability)/sqrt(n()))\n\n# Print the summaries\nprint(task_completion_summary)\n\n  Completion_Rate     Lower     Upper\n1            0.53 0.4321766 0.6278234\n\nprint(error_rate_summary)\n\n  Mean   Lower   Upper\n1 2.48 2.14747 2.81253\n\nprint(learnability_summary)\n\n      Mean    Lower    Upper\n1 5.022548 4.651809 5.393287\n\n# Add summaries to the plots\nggplot(data_task_completion, aes(x = Task_Completion)) +\n  geom_bar(fill = \"steelblue\") +\n  labs(title = \"Task Completion\", x = \"Task Completed\", y = \"Count\") +\n  annotate(\"text\", x = \"Yes\", y = 20, label = paste(\"Completion Rate:\", round(task_completion_summary$Completion_Rate, 2))) +\n  theme_minimal()\n\n\n\nggplot(data_error_rate, aes(x = Error_Rate)) +\n  geom_bar(fill = \"steelblue\") +\n  labs(title = \"Error Rate\", x = \"Number of Errors\", y = \"Count\") +\n  annotate(\"text\", x = 4, y = 20, label = paste(\"Mean:\", round(error_rate_summary$Mean, 2))) +\n  theme_minimal()\n\n\n\nggplot(data_learnability, aes(x = Learnability)) +\n  geom_histogram(binwidth = 0.5, fill = \"steelblue\") +\n  labs(title = \"Learnability\", x = \"Learnability Score\", y = \"Count\") +\n  annotate(\"text\", x = 7, y = 20, label = paste(\"Mean:\", round(learnability_summary$Mean, 2))) +\n  theme_minimal()"
  },
  {
    "objectID": "garden/ux/task-success-heatmap.html",
    "href": "garden/ux/task-success-heatmap.html",
    "title": "Task Success Heatmap",
    "section": "",
    "text": "library(tidyverse)\nlibrary(uxr)\nlibrary(showtext)\nlibrary(ggtext)\nlibrary(gt)\nlibrary(gtExtras)\nfont_add_google(\"Open Sans\")\nshowtext_auto()\n\n\ngenerate_data &lt;- function(n, col_names) {\n  data &lt;- tibble(participant = c(1:n))\n  \n  for (col_name in col_names) {\n    data[[col_name]] &lt;- sample(c(0, 1), n, replace = TRUE)\n  }\n  \n  return(data)\n}\n\n\nset.seed(123) \n\ndata &lt;- generate_data(15, c(\"sign_in\", \"navigate\", \"search\", \"find_category\", \n                            \"find_item\", \"find_review\", \"add_to_cart\", \n                            \"edit_address\", \"check_out\", \"track_status\"))\n\n\ndata_long &lt;- data |&gt; pivot_longer(-participant, names_to = \"action\", values_to = \"value\") \n\ndata_long &lt;- data_long |&gt; \n  mutate(action = str_replace_all(action, \"_\", \" \")) |&gt;\n  mutate(action = str_to_sentence(action)) |&gt; \n  mutate(action = fct_inorder(action)) |&gt; \n  mutate(action = fct_rev(action))\n\nggplot(data_long, aes(x = factor(participant), y = action, fill = as.factor(value))) +\n  geom_tile(color = \"white\") +\n  scale_fill_manual(values = c(\"#dedede\", \"#2ca786\")) +\n  theme(panel.grid.minor = element_blank(),\n        panel.grid.major = element_blank(),\n        panel.background = element_blank(),\n        axis.ticks = element_blank()) + \n  scale_x_discrete(expand = expansion(mult = c(0, .1)), position = \"top\") +\n  coord_fixed(ratio=1) +\n  labs(x = NULL, y = NULL, fill = \"Value\",\n       title = \"&lt;b&gt;Participant Task &lt;span style = 'color: #2ca786;'&gt;Success&lt;/span&gt; Heatmap&lt;/b&gt;\",\n       subtitle = \"(Each column represents a participant\") +\n  theme(plot.title.position = \"plot\",\n        plot.title = element_textbox_simple(size = 28, lineheight = 1,\n                                            padding = margin(0),\n                                            margin = margin(0, 0, 4, 0))) + \n\n  theme(legend.position = \"none\") +\n    theme(axis.text.y = element_text(size = 2)) +\n  theme(text = element_text(family = \"Open Sans\"))\n\n\n\n\n\nggplot(data_long, aes(x = factor(participant), y = action, fill = as.factor(value))) +\n  geom_tile(color = \"white\") +\n  scale_fill_manual(values = c(\"#BC412B\", \"#dedede\")) +\n  theme(panel.grid.minor = element_blank(),\n        panel.grid.major = element_blank(),\n        panel.background = element_blank(),\n        axis.ticks = element_blank()) + \n  scale_x_discrete(expand = expansion(mult = c(0, .1)), position = \"top\") +\n  coord_fixed(ratio=1) +\n  labs(x = NULL, y = NULL, fill = \"Value\",\n       title = \"&lt;b&gt;Participant Task &lt;span style = 'color: #BC412B;'&gt;Error&lt;/span&gt; Heatmap&lt;/b&gt;\",\n      subtitle = \"(Each column represents a participant\") +\n  theme(plot.title.position = \"plot\",\n        plot.title = element_textbox_simple(size = 28, lineheight = 1,\n                                            padding = margin(0),\n                                            margin = margin(0, 0, 4, 0))) + \n\n  theme(legend.position = \"none\") +\n    theme(axis.text.y = element_text(size = 24)) +\n  theme(text = element_text(family = \"Open Sans\"))\n\n\n\n\n\nresult_df &lt;- data_long |&gt; mutate(action = fct_rev(action)) |&gt; \n  group_by(action) |&gt; \n  summarise(total = sum(value)) |&gt; \n  mutate(tasks = 15) |&gt; \n   #mutate(percent = round(total/15, 2)) |&gt; \n  pmap_dfr(function(total, action, tasks) {\n    result_table &lt;- benchmark_event(benchmark = 0.75, count = total, total = tasks, input = \"values\", output = \"tibble\")\n    result_table &lt;- mutate(result_table, action = action) |&gt; select(-output_text, -result, -benchmark)  \n    result_table\n    }) |&gt; relocate(action, probability) |&gt; mutate(probability = round(probability, 2)) \n\n\nresult_df &lt;- result_df |&gt; mutate(percent = count/total) |&gt; mutate(percent = round(percent, 2)) |&gt; select(-total) |&gt; relocate(probability, .after = last_col()) |&gt; rename(success_rate = percent) \n\n\nresult_df &lt;- result_df |&gt; mutate(action = fct_rev(action)) |&gt; mutate(probability = probability*100) \n\n\nresult_df |&gt; \n  ggplot(aes(x = probability, y = action)) +\n  geom_bar(stat = \"identity\") +\n   scale_x_continuous(position = \"top\", \n                      expand = expansion(mult = c(0, .1)), limits = c(0, 100)) +\n  theme(axis.ticks.y = element_blank(),\n        axis.ticks.x = element_line(color = \"grey\")) +\n  labs(title = \"Probability (%) that the task success rate will exceed the benchmark\",\n       subtitle = \"Benchmark set at 75%\",\n       x = NULL,\n       y = NULL) +\n  geom_text(data = result_df, \n            aes(label = ifelse(probability == 0, \"0\", probability), \n                hjust = -0.5), \n            size = 5) +\n    theme(text = element_text(family = \"Open Sans\")) +\n  theme(panel.grid.minor = element_blank(),\n        panel.grid.major = element_blank(),\n        panel.background = element_blank(),\n        axis.ticks = element_blank()) + \n\n  theme(plot.title.position = \"plot\",\n        plot.title = element_textbox_simple(size = 32, lineheight = 1,\n                                            padding = margin(0),\n                                            margin = margin(0, 0, 4, 0))) + \n\n  theme(legend.position = \"none\") +\n    theme(axis.text.y = element_text(size = 28))\n\n\n\n\n\nresult_df |&gt; gt() |&gt; \n  tab_options(data_row.padding = \"2px\", column_labels.padding =  \"2px\") |&gt; \n  cols_align(align = \"left\", columns = action)\n\n\n\n\n\n  \n    \n    \n      action\n      count\n      success_rate\n      probability\n    \n  \n  \n    Sign in\n8\n0.53\n2\n    Navigate\n5\n0.33\n0\n    Search\n6\n0.40\n0\n    Find category\n5\n0.33\n0\n    Find item\n4\n0.27\n0\n    Find review\n10\n0.67\n15\n    Add to cart\n8\n0.53\n2\n    Edit address\n9\n0.60\n6\n    Check out\n7\n0.47\n0\n    Track status\n12\n0.80\n54"
  },
  {
    "objectID": "garden/ux/uxr-package-examples.html",
    "href": "garden/ux/uxr-package-examples.html",
    "title": "uxr-package",
    "section": "",
    "text": "library(uxr)\nlibrary(tidyverse)"
  },
  {
    "objectID": "garden/ux/uxr-package-examples.html#comparing-task-success-rate-with-benchmark",
    "href": "garden/ux/uxr-package-examples.html#comparing-task-success-rate-with-benchmark",
    "title": "uxr-package",
    "section": "Comparing Task Success Rate with Benchmark",
    "text": "Comparing Task Success Rate with Benchmark\n\nSingle Task\n\nbenchmark_event(benchmark = 0.8, count = 4, total = 7, input = \"values\", output = \"tibble\")\n\n# A tibble: 1 × 6\n  count total benchmark result probability output_text                          \n  &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;       &lt;dbl&gt; &lt;chr&gt;                                \n1     4     7       0.8 0.0333       0.033 Based on the event rate of 58%, the …\n\n\n\n\nMultiple Tasks\n\nresult &lt;- purrr::map_dfr(c(53, 59, 51, 55, 60, 61, 52, 49), function(count) benchmark_event(benchmark = 0.75, count = count, total = 70, input = \"values\", output = \"tibble\"))\n\nresult_df &lt;- result |&gt; select(count, total, benchmark, result) |&gt; \n  mutate(result = round(result, 2)) |&gt; mutate(result = result*100) |&gt; \n  mutate(result_percent = scales::percent(result))\n\nresult_df &lt;- result_df |&gt; tibble::rowid_to_column(\"task\") |&gt; \n  mutate(task = fct_inorder(factor(task))) \n\nresult_df |&gt; \n  ggplot(aes(x = result, y = factor(task))) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  scale_x_continuous(limits = c(0, 100), \n                     breaks = seq(0, 100, by = 10), \n                     position = \"top\",\n                     expand = expansion(mult = c(0, .1))) +\n  scale_y_discrete(limits = rev(levels(result_df$task))) +\n  theme(axis.ticks.y = element_blank()) +\n  theme(axis.ticks.x = element_line(color = \"grey\")) +\n  labs(title = \"Probability (%) that the task success rate will exceed the benchmark\",\n       x = NULL,\n       y = NULL) +\n  geom_text(aes(label = result), color = \"white\", size = 5, hjust = 1.25)"
  },
  {
    "objectID": "garden.html",
    "href": "garden.html",
    "title": "Garden",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nFunction to calculate week of the year\n\n\n\n\n\n\n\nCode\n\n\n\n\n\n\n\nundefined\n\n\n\n\n\n\n\nGardening\n\n\n\n\n\n\n\nReport\n\n\n\n\n\n\n\nSimulated SUS Datasets\n\n\n\n\n\n\n\nanova\n\n\n\n\n\n\n\nbenchmark_scores\n\n\n\n\n\n\n\ncsat\n\n\n\n\n\n\n\nindex\n\n\n\n\n\n\n\nTask Success Heatmap\n\n\n\n\n\n\n\nuxr-package\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome",
    "section": "",
    "text": "Welcome\nThis is a place where you can find links to the following:\nQuantitative Experience Research"
  },
  {
    "objectID": "newsletters/01/index.html",
    "href": "newsletters/01/index.html",
    "title": "Newsletter #1",
    "section": "",
    "text": "In this blog, I would like to share experiments, half-cooked ideas, and data visualisation techniques. Some of these posts will be treated like a digital garden so expect things to change."
  },
  {
    "objectID": "newsletters/01/index.html#a-new-place-to-share-sports-data-visualisation",
    "href": "newsletters/01/index.html#a-new-place-to-share-sports-data-visualisation",
    "title": "Newsletter #1",
    "section": "",
    "text": "In this blog, I would like to share experiments, half-cooked ideas, and data visualisation techniques. Some of these posts will be treated like a digital garden so expect things to change."
  },
  {
    "objectID": "newsletters/01/index.html#what-i-plan-to-do",
    "href": "newsletters/01/index.html#what-i-plan-to-do",
    "title": "Newsletter #1",
    "section": "What I Plan to Do",
    "text": "What I Plan to Do\nOver the past year, I’ve created a few visualisations that I shared online. This website is a place where I hope to share more about the process and the visualisations that I create."
  },
  {
    "objectID": "newsletters.html",
    "href": "newsletters.html",
    "title": "Newsletters",
    "section": "",
    "text": "Newsletter #1\n\n\n\n\n\n\n\nannouncement\n\n\n\n\nWelcome to my newsletter\n\n\n\n\n\n\nMay 31, 2023\n\n\nJoe Chelladurai\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2023-31-5-first-post/index.html",
    "href": "posts/2023-31-5-first-post/index.html",
    "title": "Welcome to my blog",
    "section": "",
    "text": "In this blog, I would like to share experiments, half-cooked ideas, and data visualisation techniques. Some of these posts will be treated like a digital garden so expect things to change."
  },
  {
    "objectID": "posts/2023-31-5-first-post/index.html#a-new-place-to-share-sports-data-visualisation",
    "href": "posts/2023-31-5-first-post/index.html#a-new-place-to-share-sports-data-visualisation",
    "title": "Welcome to my blog",
    "section": "",
    "text": "In this blog, I would like to share experiments, half-cooked ideas, and data visualisation techniques. Some of these posts will be treated like a digital garden so expect things to change."
  },
  {
    "objectID": "posts/2023-31-5-first-post/index.html#what-i-plan-to-do",
    "href": "posts/2023-31-5-first-post/index.html#what-i-plan-to-do",
    "title": "Welcome to my blog",
    "section": "What I Plan to Do",
    "text": "What I Plan to Do\nOver the past year, I’ve created a few visualisations that I shared online. This website is a place where I hope to share more about the process and the visualisations that I create."
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "Blog",
    "section": "",
    "text": "Welcome to my blog\n\n\n\n\n\n\n\nannouncement\n\n\n\n\nA new place to share my data visualisations\n\n\n\n\n\n\nMay 31, 2023\n\n\nJoe Chelladurai\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "public/book/index.html",
    "href": "public/book/index.html",
    "title": "Quantitative Experience Research",
    "section": "",
    "text": "This is a book"
  }
]