[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This is a place where I share Quantitative UX Resources. I am looking for a job. Please hire me.\nJoe Chelladurai"
  },
  {
    "objectID": "book/chapter-1/index.html",
    "href": "book/chapter-1/index.html",
    "title": "Get, Set, Go",
    "section": "",
    "text": "In this chapter, we will complete setup and get ready to go."
  },
  {
    "objectID": "book/chapter-2/index.html",
    "href": "book/chapter-2/index.html",
    "title": "New Section",
    "section": "",
    "text": "In this section we will discover how to create a new plot."
  },
  {
    "objectID": "book/chapter-2/index.html#a-new-plot",
    "href": "book/chapter-2/index.html#a-new-plot",
    "title": "New Section",
    "section": "",
    "text": "In this section we will discover how to create a new plot."
  },
  {
    "objectID": "book/chapter-2/index.html#another-plot",
    "href": "book/chapter-2/index.html#another-plot",
    "title": "New Section",
    "section": "Another Plot",
    "text": "Another Plot\nThere will be another plot discussion here."
  },
  {
    "objectID": "book/index.html",
    "href": "book/index.html",
    "title": "Quantitative Experience Research with R",
    "section": "",
    "text": "This is a place for the book."
  },
  {
    "objectID": "book/index.html#preface",
    "href": "book/index.html#preface",
    "title": "Quantitative Experience Research with R",
    "section": "Preface",
    "text": "Preface\nThis is a preface."
  },
  {
    "objectID": "garden/code/index.html",
    "href": "garden/code/index.html",
    "title": "Code",
    "section": "",
    "text": "library(tidyverse)\nThe mtcars dataset has rownames. This makes it so that we need another step to process. I use forcats::fct_reorder within ggplot.\nggplot(mtcars, aes(x = mpg, y = forcats::fct_reorder(rownames(mtcars), mpg))) +\n  geom_bar(stat = \"identity\")\nAnother way to do this would be to preprocess.\nmtcars &lt;- mtcars |&gt; rownames_to_column(\"model\")\nmtcars &lt;- mtcars |&gt;\n  mutate(model = forcats::fct_reorder(model, mpg))\nggplot(mtcars, aes(x = mpg, y = model)) +\n  geom_bar(stat = \"identity\")"
  },
  {
    "objectID": "garden/code/index.html#enhancing-the-plot",
    "href": "garden/code/index.html#enhancing-the-plot",
    "title": "Code",
    "section": "Enhancing the Plot",
    "text": "Enhancing the Plot\n\nggplot(mtcars, aes(x = mpg, y = model)) +\n  geom_bar(stat = \"identity\", width = .8) +\n  geom_text(aes(label = round(mpg)), hjust = 1.05, color  = \"white\") +\n  scale_x_continuous(expand = expansion(mult = c(0, .1))) +\n  theme(aspect.ratio = 2) +\n  theme(axis.ticks = element_blank()) +\n  theme(panel.grid.major.y = element_blank()) +\n  theme(panel.background = element_blank()) +\n  labs(x = NULL, \n       y = NULL,\n       title = \"Miles Per Gallon by Model\") +\n  theme(plot.title = element_text(color = \"#686868\", face = 'bold', size = 12, hjust = 0)) +\n  theme(plot.title.position = \"plot\")"
  },
  {
    "objectID": "garden/code/index.html#ideas",
    "href": "garden/code/index.html#ideas",
    "title": "Code",
    "section": "Ideas",
    "text": "Ideas\nImportant is readability. Understand it quickly. Make it simple. Match the chart to the message.1 (See bottom of document for source)\nIn the above case, adding the labels is a little too much. Instead, The Economist style offers a different approach. This is not to say that text labels are bad. For this chart, it “feels” better to leave out the clutter from the labels.\n\nMove the x axis text to the top of the chart\nAdd x axis label (mpg) to the right of “30” in the x axis ticks label.\n\n\nggplot(mtcars, aes(x = mpg, y = model)) +\n  geom_bar(stat = \"identity\", width = .7) +\n  scale_x_continuous(expand = expansion(mult = c(0, .1)), position = \"top\") +\n  theme(aspect.ratio = 2) +\n  theme(axis.ticks.y = element_blank()) +\n  theme(axis.ticks.x = element_line(color = \"grey\")) +\n  theme(panel.grid.major.y = element_blank()) +\n # theme(panel.background = element_blank()) +\n  labs(x = NULL, \n       y = NULL,\n       title = \"Totota Corolla had the highest fuel \\nefficiency in the mtcars dataset\",\n       subtitle = \"Fuel efficiency measured by miles per gallon\",\n       caption = \"Source: mtcars dataset\") +\n  theme(plot.title = element_text(color = \"#686868\", face = 'bold', size = 12, hjust = 0)) +\n  theme(plot.subtitle = element_text(color = \"#686868\", size = 9, hjust = 0)) +\n  theme(plot.caption = element_text(color = \"#686868\")) +\n  theme(plot.title.position = \"plot\") +\n  theme(plot.caption.position = \"plot\") +\n  theme(axis.title.x = element_text(margin = margin(r = 10))) \n\n\n\n\nI just checked on my phone, and this isn’t mobile friendly.\n\nggplot(mtcars, aes(x = mpg, y = model)) +\n  geom_bar(stat = \"identity\", width = .7) +\n  scale_x_continuous(expand = expansion(mult = c(0, .1)), position = \"top\") +\n # theme(aspect.ratio = 2) +\n  theme(axis.ticks.y = element_blank()) +\n  theme(axis.ticks.x = element_line(color = \"grey\")) +\n  theme(panel.grid.major.y = element_blank()) +\n # theme(panel.background = element_blank()) +\n  labs(x = NULL, \n       y = NULL,\n       title = \"Totota Corolla had the highest fuel \\nefficiency in the mtcars dataset\",\n       subtitle = \"Fuel efficiency measured by miles per gallon\",\n       caption = \"Source: mtcars dataset\") +\n  theme(plot.title = element_text(color = \"#686868\", face = 'bold', size = 12, hjust = 0)) +\n  theme(plot.subtitle = element_text(color = \"#686868\", size = 9, hjust = 0)) +\n  theme(plot.caption = element_text(color = \"#686868\")) +\n  theme(plot.title.position = \"plot\") +\n  theme(plot.caption.position = \"plot\") +\n  theme(axis.title.x = element_text(margin = margin(r = 10))) \n\n\n\n\nThis was much better. However, if you are using RStudio, the inline plot in the qmd file does not reflect the figure sizes by width. The preview/render does reflect the new widths.\nThe font sizes are not readable. Partly because there are 32 cars, it may be a challenge.\n\nggplot(mtcars, aes(x = mpg, y = model)) +\n  geom_bar(stat = \"identity\", width = .7) +\n  scale_x_continuous(expand = expansion(mult = c(0, .1)), position = \"top\") +\n  theme(axis.ticks.y = element_blank()) +\n  theme(axis.ticks.x = element_line(color = \"grey\")) +\n  theme(panel.grid.major.y = element_blank()) +\n  labs(x = NULL, \n       y = NULL,\n       title = \"Totota Corolla had the highest fuel \\nefficiency in the mtcars dataset\",\n       subtitle = \"Fuel efficiency measured by miles per gallon\",\n       caption = \"Source: mtcars dataset\") +\n  theme(plot.title = element_text(color = \"#686868\", face = 'bold', size = 16, hjust = 0)) +\n  theme(plot.subtitle = element_text(color = \"#686868\", size = 11, hjust = 0)) +\n  theme(plot.caption = element_text(color = \"#686868\")) +\n  theme(plot.title.position = \"plot\") +\n  theme(plot.caption.position = \"plot\") +\n  theme(axis.title.x = element_text(margin = margin(r = 10))) +\n  theme(axis.text.y = element_text(size = 12))\n\n\n\n\nThis was much more readable. Again, the Quarto inline plot is deceiving.\nSee screenshot:\n\nLet’s make some more changes: 1. Increase subtitle font size 2. 3.\n\nggplot(mtcars, aes(x = mpg, y = model)) +\n  geom_bar(stat = \"identity\", width = .7) +\n  scale_x_continuous(expand = expansion(mult = c(0, .1)), position = \"top\") +\n  theme(axis.ticks.y = element_blank()) +\n  theme(axis.ticks.x = element_line(color = \"grey\")) +\n  theme(panel.grid.major.y = element_blank()) +\n  labs(x = NULL, \n       y = NULL,\n       title = \"Totota Corolla had the highest fuel \\nefficiency in the mtcars dataset\",\n       subtitle = \"Fuel efficiency measured by miles per gallon\",\n       caption = \"Source: mtcars dataset\") +\n  theme(plot.title = element_text(color = \"#686868\", face = 'bold', size = 16, hjust = 0)) +\n  theme(plot.subtitle = element_text(color = \"#686868\", size = 14, hjust = 0)) +\n  theme(plot.caption = element_text(color = \"#686868\")) +\n  theme(plot.title.position = \"plot\") +\n  theme(plot.caption.position = \"plot\") +\n  theme(axis.title.x = element_text(margin = margin(r = 10))) +\n  theme(axis.text.y = element_text(size = 12))"
  },
  {
    "objectID": "garden/code/index.html#customising-fonts",
    "href": "garden/code/index.html#customising-fonts",
    "title": "Code",
    "section": "Customising Fonts",
    "text": "Customising Fonts\n\nlibrary(showtext)\nfont_add_google(\"Open Sans\")\nshowtext_auto()\n\nTo make this work with quarto or rmarkdown, we need to specify fig.showtext = TRUE https://github.com/yixuan/showtext/issues/51#issuecomment-879535052\n\nggplot(mtcars, aes(x = mpg, y = model)) +\n  geom_bar(stat = \"identity\", width = .7) +\n  scale_x_continuous(expand = expansion(mult = c(0, .1)), position = \"top\") +\n  theme(axis.ticks.y = element_blank()) +\n  theme(axis.ticks.x = element_line(color = \"grey\")) +\n  theme(panel.grid.major.y = element_blank()) +\n  labs(x = NULL, \n       y = NULL,\n       title = \"Totota Corolla had the highest fuel \\nefficiency in the mtcars dataset\",\n       subtitle = \"Fuel efficiency measured by miles per gallon\",\n       caption = \"Source: mtcars dataset\") +\n  theme(plot.title = element_text(color = \"#686868\", face = 'bold', size = 16, hjust = 0)) +\n  theme(plot.subtitle = element_text(color = \"#686868\", size = 12, hjust = 0)) +\n  theme(plot.caption = element_text(color = \"#686868\")) +\n  theme(plot.title.position = \"plot\") +\n  theme(plot.caption.position = \"plot\") +\n  theme(axis.title.x = element_text(margin = margin(r = 10))) +\n  theme(axis.text.y = element_text(size = 12)) +\n  theme(text = element_text(family = \"Open Sans\"))\n\n\n\n\nTO DO:\nWhat is a good aspect ratio for a bar chart?\nFor later:\n“Millennials more likely… bar chart has labels”. https://www.pewresearch.org/short-reads/2017/08/30/most-americans-especially-millennials-say-libraries-can-help-them-find-reliable-trustworthy-information/\nevamayray flipbookr\nSurvey data example:\nhttps://www.pewresearch.org/short-reads/2023/05/26/family-time-is-far-more-important-than-other-aspects-of-life-for-most-americans/\nSources:\n\n(Source: Analyst Academy - https://www.youtube.com/watch?v=cGGkAGBre3A)\n\n\n# Addressing tidyverse warnings example\nlibrary(dplyr)\nconflicted::conflicts_prefer(dplyr::filter)\n\n[conflicted] Will prefer dplyr::filter over any other package."
  },
  {
    "objectID": "garden/gardening/index.html",
    "href": "garden/gardening/index.html",
    "title": "Gardening",
    "section": "",
    "text": "Digital Gardening\nInspired by digital gardening, I want to write down thoughts as I explore, wander, refine, and share. My creative process is more cyclical. I start working on things, then procrastinate, lose interest, and find interest again. This goes on and on and sometimes I lead it towards the end. So there are a lot of unfinished things."
  },
  {
    "objectID": "garden/survey/index.html",
    "href": "garden/survey/index.html",
    "title": "Untitled",
    "section": "",
    "text": "library(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.2.2\n\n\nWarning: package 'ggplot2' was built under R version 4.2.2\n\n\nWarning: package 'tidyr' was built under R version 4.2.2\n\n\nWarning: package 'readr' was built under R version 4.2.2\n\n\nWarning: package 'purrr' was built under R version 4.2.2\n\n\nWarning: package 'dplyr' was built under R version 4.2.2\n\n\nWarning: package 'stringr' was built under R version 4.2.2\n\n\nWarning: package 'forcats' was built under R version 4.2.2\n\n\nWarning: package 'lubridate' was built under R version 4.2.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.1.8\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n70.05\n69.325\n\n# Initialize a global seed\nset.seed(9)\n\n\ngenerate_numbers &lt;- function(n, ratio, seed) {\n  # Generate n numbers from a beta distribution with alpha &gt; beta\n  set.seed(seed)\n  \n  alpha &lt;- 1\n  beta &lt;- 1 / ratio  # take the reciprocal to get beta\n\n  skewed &lt;- rbeta(n, alpha, beta)\n  \n  # Scale numbers to be between 1 and 5\n  skewed_scaled &lt;- 1 + 4 * skewed\n  return(round(skewed_scaled))\n}\n\nq_01 &lt;- generate_numbers(100, 6/2, sample(1:10))\nq_02 &lt;- generate_numbers(100, 1/4, sample(11:20))\nq_03 &lt;- generate_numbers(100, 4/2, sample(21:30))\nq_04 &lt;- generate_numbers(100, 1/4, sample(31:40))\nq_05 &lt;- generate_numbers(100, 4/2, sample(41:50))\nq_06 &lt;- generate_numbers(100, 6/4, sample(51:60))\nq_07 &lt;- generate_numbers(100, 2/2, sample(61:70))\nq_08 &lt;- generate_numbers(100, 2/4, sample(71:80))\nq_09 &lt;- generate_numbers(100, 1/2, sample(81:90))\nq_10 &lt;- generate_numbers(100, 1/4, sample(91:100))\n\ndf &lt;- data.frame(q_01, q_02, q_03, q_04, q_05, q_06, q_07, q_08, q_09, q_10)\n\ndf |&gt; gather() |&gt; \n  ggplot(aes(x = value)) + geom_density() + facet_wrap( ~key)\n\n\n\ndf |&gt; \n  mutate(total_odd = rowSums(select(df, ends_with(c(\"1\", \"3\", \"5\", \"7\", \"9\"))), na.rm = TRUE)) |&gt; \n  mutate(total_even = rowSums(select(df, ends_with(c(\"0\", \"2\", \"4\", \"6\", \"8\"))), na.rm = TRUE)) |&gt; \n  mutate(total_odd = total_odd - 5) |&gt; \n  mutate(total_even = 25 - total_even) |&gt; \n  mutate(total = total_odd + total_even) |&gt; \n  mutate(total = total * 2.5) |&gt; summarise(mean = mean(total))\n\n  mean\n1 63.7\n\n\n\nrnorm(1, mean = 2, sd = 1)\n\n[1] 2.092461\n\n\nStep 1: Convert the scale into number for each of the 10 questions\nStrongly Disagree: 1 point Disagree: 2 points Neutral: 3 points Agree: 4 points Strongly Agree: 5 points Step 2: Calculate\nX = Sum of the points for all odd-numbered questions – 5 Y = 25 – Sum of the points for all even-numbered questions SUS Score = (X + Y) x 2.5 The rationale behind the calculation is very intuitive. The total score is 100 and each of the questions has a weight of 10 points.\nAs odd-numbered questions are all in a positive tone, if the response is strongly agree, you will want to give them the maximum point which is 10 for each question. If the response is strongly disagree, you will want to give them the minimum point which is 0. By subtracting 1 from each of the odd-numbered questions, you ensure that minimum is 0. After which, by multiplying by 2.5, you ensure that the maximum is 10 for each of the questions.\nVice versa, for the even-numbered questions in a negative tone, if the response is strongly agree, you will want to give them the minimum point which is 0 for each question. If the response is strongly disagree, you will want to give them the minimum point which is 0. As such, by subtracting the points of each question from 5, you ensure that minimum is 0. After which, by multiplying by 2.5, you ensure that the maximum is 10 for each of the questions.\nInterpreting System Usability Scale (SUS) Score SUS score will be able to tell you your usability performance in the aspects of effectiveness, efficiency, and overall ease of use. Although each responses yield a score on a scale of 0 – 100, do not mistake it as a percentage or percentile.\nThe average SUS score is 68. This simply means that a score of 68 will just put you at 50th percentile. Below is the general guideline on the interpretation of SUS score:\nSUS Score Grade Adjective Rating &gt; 80.3 A Excellent 68 – 80.3 B Good 68 C Okay 51 – 68 D Poor &lt; 51 F Awful"
  },
  {
    "objectID": "garden.html",
    "href": "garden.html",
    "title": "Garden",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nCode\n\n\n\n\n\n\n\nundefined\n\n\n\n\n\n\n\nGardening\n\n\n\n\n\n\n\nUntitled\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome",
    "section": "",
    "text": "Welcome\nThis is a place where I would like to share resources for Quantitative Experience Research."
  },
  {
    "objectID": "newsletters/01/index.html",
    "href": "newsletters/01/index.html",
    "title": "Newsletter #1",
    "section": "",
    "text": "In this blog, I would like to share experiments, half-cooked ideas, and data visualisation techniques. Some of these posts will be treated like a digital garden so expect things to change."
  },
  {
    "objectID": "newsletters/01/index.html#a-new-place-to-share-sports-data-visualisation",
    "href": "newsletters/01/index.html#a-new-place-to-share-sports-data-visualisation",
    "title": "Newsletter #1",
    "section": "",
    "text": "In this blog, I would like to share experiments, half-cooked ideas, and data visualisation techniques. Some of these posts will be treated like a digital garden so expect things to change."
  },
  {
    "objectID": "newsletters/01/index.html#what-i-plan-to-do",
    "href": "newsletters/01/index.html#what-i-plan-to-do",
    "title": "Newsletter #1",
    "section": "What I Plan to Do",
    "text": "What I Plan to Do\nOver the past year, I’ve created a few visualisations that I shared online. This website is a place where I hope to share more about the process and the visualisations that I create."
  },
  {
    "objectID": "newsletters.html",
    "href": "newsletters.html",
    "title": "Newsletters",
    "section": "",
    "text": "Newsletter #1\n\n\n\n\n\n\n\nannouncement\n\n\n\n\nWelcome to my newsletter\n\n\n\n\n\n\nMay 31, 2023\n\n\nJoe Chelladurai\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2023-31-5-first-post/index.html",
    "href": "posts/2023-31-5-first-post/index.html",
    "title": "Welcome to my blog",
    "section": "",
    "text": "In this blog, I would like to share experiments, half-cooked ideas, and data visualisation techniques. Some of these posts will be treated like a digital garden so expect things to change."
  },
  {
    "objectID": "posts/2023-31-5-first-post/index.html#a-new-place-to-share-sports-data-visualisation",
    "href": "posts/2023-31-5-first-post/index.html#a-new-place-to-share-sports-data-visualisation",
    "title": "Welcome to my blog",
    "section": "",
    "text": "In this blog, I would like to share experiments, half-cooked ideas, and data visualisation techniques. Some of these posts will be treated like a digital garden so expect things to change."
  },
  {
    "objectID": "posts/2023-31-5-first-post/index.html#what-i-plan-to-do",
    "href": "posts/2023-31-5-first-post/index.html#what-i-plan-to-do",
    "title": "Welcome to my blog",
    "section": "What I Plan to Do",
    "text": "What I Plan to Do\nOver the past year, I’ve created a few visualisations that I shared online. This website is a place where I hope to share more about the process and the visualisations that I create."
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "Blog",
    "section": "",
    "text": "Welcome to my blog\n\n\n\n\n\n\n\nannouncement\n\n\n\n\nA new place to share my data visualisations\n\n\n\n\n\n\nMay 31, 2023\n\n\nJoe Chelladurai\n\n\n\n\n\n\nNo matching items"
  }
]